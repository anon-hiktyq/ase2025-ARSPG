2025-07-05 02:34:44,579 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:34:44,579 - INFO  - ========================================

2025-07-05 02:34:44,674 - INFO  - 初始待处理函数: ['SAMSubModeDampFun']
2025-07-05 02:34:44,675 - INFO  - 
GENERATE ANNOTATION FOR SAMSubModeDampFun
2025-07-05 02:34:44,675 - INFO  - ========================================

2025-07-05 02:34:44,675 - INFO  - 函数 SAMSubModeDampFun 已经初始化
2025-07-05 02:34:44,675 - INFO  - 开始生成 SAMSubModeDampFun 的注释代码
2025-07-05 02:34:44,677 - INFO  - 
GENERATE FUNCTION SUMMARY FOR SAMSubModeDampFun
2025-07-05 02:34:44,677 - INFO  - ========================================

2025-07-05 02:34:46,897 - INFO  - 开始生成完整的 SAMSubModeDampFun 的注释代码
2025-07-05 02:34:46,908 - INFO  - 开始生成 SAMSubModeDampFun 的 ACSL 规约
2025-07-05 02:34:47,059 - INFO  - 
SUMMARY FOR SAMSubModeDampFun
2025-07-05 02:34:47,059 - INFO  - ========================================

2025-07-05 02:34:47,059 - INFO  - 
函数 SAMSubModeDampFun 的 VST Summary 为:
/*@
With pIp_rate_l pIp_rate_0 pIp_rate_1 pIp_rate_2 pIp_max pIp_tmax pIp_countPublic pIp_countMode pIp_flgMode
Require store_int_array(pIp->rate,3, pIp_rate_l) && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && pIp->max == pIp_max && pIp->tmax == pIp_tmax && pIp->countPublic == pIp_countPublic && pIp->countMode == pIp_countMode && pIp->flgMode == pIp_flgMode
Ensure (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic > 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && -pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode > 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countPublic + 1 > 350 && pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgMode == 17)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[1] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[0] < pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && pIp_rate_l[2] < pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic + 1 <= 350 && -pIp_rate_l[2] < pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic + 1) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[2] >= pIp_max && -pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[2] >= pIp_max && pIp_rate_l[2] > pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[2]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[0] && -pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[0] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[0] && pIp_rate_l[0] > pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[0]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] >= 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && -pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= -pIp_rate_l[1] && -pIp_rate_l[0] <= -pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] < 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == -pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && -pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] < 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode)) || (pIp_countMode <= 1000 && pIp_countPublic <= 350 && pIp_rate_l[1] >= pIp_max && -pIp_rate_l[2] <= pIp_rate_l[1] && pIp_rate_l[0] <= pIp_rate_l[1] && pIp_rate_l[2] < 0 && pIp_rate_l[1] >= 0 && pIp_rate_l[0] >= 0 && pIp_rate_l[0] == pIp_rate_0 && pIp_rate_l[1] == pIp_rate_1 && pIp_rate_l[2] == pIp_rate_2 && store_int_array(&pIp->rate, 3, pIp_rate_l) * (pIp->max == pIp_max) * (pIp->tmax == pIp_rate_l[1]) * (pIp->countPublic == pIp_countPublic) * (pIp->countMode == pIp_countMode) * (pIp->flgMode == pIp_flgMode))
*/
2025-07-05 02:34:47,062 - INFO  - 
函数 SAMSubModeDampFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->rate+ (0..3)) ;
 requires \separated(pIp,pIp->rate+(0..3)) ;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17;

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

ensures \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);

*/

2025-07-05 02:34:47,286 - INFO  - 
VERIFICATION FOR SAMSubModeDampFun
2025-07-05 02:34:47,287 - INFO  - ========================================

2025-07-05 02:34:56,205 - INFO  - 
GENERLIZATION FOR SAMSubModeDampFun
2025-07-05 02:34:56,206 - INFO  - ========================================

2025-07-05 02:34:56,311 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,319 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,321 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,327 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,330 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,337 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,339 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,346 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,349 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,356 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,359 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,367 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,369 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,377 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,379 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,386 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,389 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,397 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,399 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,406 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,409 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,416 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,419 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,426 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,429 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,436 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,438 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,444 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,447 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,453 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,455 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,462 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,464 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,471 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,473 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,479 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,482 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,490 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,493 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,500 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,503 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,510 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,513 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,520 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,523 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,530 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,532 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,539 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,541 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,548 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,550 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,556 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,559 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,566 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,569 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,576 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,579 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,586 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,588 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,595 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,598 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,604 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,606 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,613 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,615 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,622 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,624 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,630 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,632 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,639 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,642 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,649 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,651 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,659 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,661 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,668 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,671 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,679 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,681 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,687 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,690 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,697 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,700 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,706 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,709 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,717 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,719 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,726 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,729 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,736 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,739 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,746 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,748 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,756 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,758 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,765 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,767 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,774 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,776 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,782 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,785 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,791 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,794 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,800 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,803 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,810 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,812 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,819 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,821 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,829 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,831 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,838 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,840 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,848 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,850 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,858 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,860 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,868 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,870 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,878 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,881 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,888 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,890 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,897 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,900 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,907 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,909 - INFO  - Original ACSL: \old(pIp->countPublic) > 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,916 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic,
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,919 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,926 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,929 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,936 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,938 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,946 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,949 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,956 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,958 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,967 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,969 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,977 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,980 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,987 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:56,990 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:56,997 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,000 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,007 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,010 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,016 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,019 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,026 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,029 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,036 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,038 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,045 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,047 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,054 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,056 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,063 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,066 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,072 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,074 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,082 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,084 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,091 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,094 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,101 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,104 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,111 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,114 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,122 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,124 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,132 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,135 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,142 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,145 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,152 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,154 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,162 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,164 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,170 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,173 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,180 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,183 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,190 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,193 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,200 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,202 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,209 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,211 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,218 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,220 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,226 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,229 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,236 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,238 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,244 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,247 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,254 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,257 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,264 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,267 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,275 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,277 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,285 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,288 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,295 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,297 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,304 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,307 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,314 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,316 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,324 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,327 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,335 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,337 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,345 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,348 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,356 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,359 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,367 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,369 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,377 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,379 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,386 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,388 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,396 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,398 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,405 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,407 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,414 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,417 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,424 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,427 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,435 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,437 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,445 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,448 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,456 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,459 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,466 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,469 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,477 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,480 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,488 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,491 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,499 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,502 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,510 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,512 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,520 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,523 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,530 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,532 - INFO  - Original ACSL: \old(pIp->countMode) > 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,540 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 <
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,542 - INFO  - Original ACSL: \old(pIp->countPublic) + 1 > 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgMode == 17
2025-07-05 02:34:57,549 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(350 <
                                        old_pIp_countPublic +
                                        1,
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    0 == pIp_countPublic),
                0 == pIp_countMode),
            17 == pIp_flgMode))
2025-07-05 02:34:57,551 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,559 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,562 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,569 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,572 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,581 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,584 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,593 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,596 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,604 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,607 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,615 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,618 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,626 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,628 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[1] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,636 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_1 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,638 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,646 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,649 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,657 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,660 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,669 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,671 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,679 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,682 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,690 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,693 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,701 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,704 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,712 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,715 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[0] < \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,722 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_0 <
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,725 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,733 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,735 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,743 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,746 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,754 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,757 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,765 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,767 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,776 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,779 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,787 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,790 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,799 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,802 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,809 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,812 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,820 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,822 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,830 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,833 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,841 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,843 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && pIp->rate[2] < \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,851 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        pIp_rate_2 <
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,854 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,863 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,866 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,874 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,877 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,885 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,888 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) + 1 <= 350 && -pIp->rate[2] < \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic) + 1&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,896 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic +
                                        1),
                                        0 - pIp_rate_2 <
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic ==
                    old_pIp_countPublic + 1),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,898 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,906 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,908 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,916 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,919 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,927 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,930 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,938 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,941 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,948 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,950 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,958 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,961 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,968 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,970 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,977 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,980 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,988 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:57,990 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:57,998 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,001 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,009 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,012 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[2] >= \old(pIp->max) && -pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,020 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_2 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,022 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,029 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,032 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,040 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,042 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,050 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,052 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[2] >= \old(pIp->max) && pIp->rate[2] > pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[2]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,059 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_2 >=
                                        old_pIp_max),
                                        pIp_rate_2 >
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_2),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,061 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,068 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,071 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,079 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,081 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,089 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,092 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,099 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,101 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,108 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,111 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,119 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,122 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[0] && -pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,130 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_0),
                                    0 - pIp_rate_0 >
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,132 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[0] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[0] && pIp->rate[0] > pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[0]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,139 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_0 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_0),
                                    pIp_rate_0 > pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_0),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,142 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,149 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,151 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,158 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,161 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,170 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,173 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] >= 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,181 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 <= pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,183 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,192 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,194 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && -pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= -pIp->rate[1] && -pIp->rate[0] <= -pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] < 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == -pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,203 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        0 - pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        0 - pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    0 - pIp_rate_1),
                                0 > pIp_rate_2),
                            0 > pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == 0 - pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,206 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && -pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] < 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode)
2025-07-05 02:34:58,213 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    0 - pIp_rate_0 <=
                                    pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 > pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:34:58,216 - INFO  - Original ACSL: \old(pIp->countMode) <= 1000 && \old(pIp->countPublic) <= 350 && pIp->rate[1] >= \old(pIp->max) && -pIp->rate[2] <= pIp->rate[1] && pIp->rate[0] <= pIp->rate[1] && pIp->rate[2] < 0 && pIp->rate[1] >= 0 && pIp->rate[0] >= 0 && pIp->rate[0] == \old(pIp->rate[0]) && pIp->rate[1] == \old(pIp->rate[1]) && pIp->rate[2] == \old(pIp->rate[2]) ==> pIp->max == \old(pIp->max)&&pIp->tmax == pIp->rate[1]&&pIp->countPublic == \old(pIp->countPublic)&&pIp->countMode == \old(pIp->countMode)&&pIp->flgMode == \old(pIp->flgMode);
2025-07-05 02:34:58,223 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(1000 >=
                                        old_pIp_countMode,
                                        350 >=
                                        old_pIp_countPublic),
                                        pIp_rate_1 >=
                                        old_pIp_max),
                                        0 - pIp_rate_2 <=
                                        pIp_rate_1),
                                    pIp_rate_0 <= pIp_rate_1),
                                0 > pIp_rate_2),
                            0 <= pIp_rate_1),
                        0 <= pIp_rate_0),
                    pIp_rate_0 == old_pIp_rate_0),
                pIp_rate_1 == old_pIp_rate_1),
            pIp_rate_2 == old_pIp_rate_2),
        And(And(And(And(pIp_max == old_pIp_max,
                        pIp_tmax == pIp_rate_1),
                    pIp_countPublic == old_pIp_countPublic),
                pIp_countMode == old_pIp_countMode),
            pIp_flgMode == old_pIp_flgMode))
2025-07-05 02:35:05,672 - INFO  - 
SAMSubModeDampFun 的最大非冗余集合:
2025-07-05 02:35:05,672 - INFO  - []
