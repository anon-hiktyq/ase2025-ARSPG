FUNCTION INITIALIZATION
========================================

type_name:__Inputproceed
type_name:TAG_DSS_DATA
type_name:TAG_ATTITUDE_PARA
type_name:TAG_DIGITAL_GYRO_DATA
初始待处理函数: ['InputproceedFun']

GENERATE ANNOTATION FOR InputproceedFun
========================================

函数 InputproceedFun 已经初始化
开始生成 InputproceedFun 的注释代码
ACSL InputproceedFun.c文件的内容为: 

typedef struct TAG_DSS_DATA
{	
	int     stateFlag_A;		
	int     stateFlag_B;			
	int 	royaw;
	int  	piyaw;
    int     flgSP;				
}SDSSData;

typedef struct TAG_DIGITAL_GYRO_DATA
{

    int		countPick[9];		 	
    int 	Gi[3];				 
    int 	wa[9];				 
    int 	wal[9];				 
 	int		JoinTotal;          
 	int  	gyroStatus0;		
 	int 	gyroStatus1;		 
    int 	W[3];				 
    int 	SignFlag[9] ; 		   
	int 	Rtemp[3][5];		 
	int 	stateFlag[9];		
	
} SGyroData;


typedef struct TAG_ATTITUDE_PARA     	
{                                    	
	                                 	
	int 	angle[3];			 
	int 	rate[3]; 			 
	                                 	
}SAttitude;


typedef struct __Inputproceed
{
	int  		       flgGryoCalc;
	int                flgMode;
	SDSSData			mDSSData;
	SAttitude			mAttitude;
	SGyroData			mGyroData;

} Inputproceed;

void InputproceedFun(Inputproceed *pIp)
{

	if ( pIp->flgMode == 0x33 )
	{
		if ( pIp -> mDSSData.flgSP == 1 )
		{
        	pIp -> mAttitude.angle[0] = pIp -> mDSSData.royaw ;
        	pIp -> mAttitude.angle[1] = pIp -> mDSSData.piyaw ;

       		pIp -> mGyroData.Gi[0] = pIp -> mDSSData.royaw ;
       		pIp -> mGyroData.Gi[1] = pIp -> mDSSData.piyaw ;
		}
		else
		{
		    pIp -> mAttitude.angle[0] = pIp -> mGyroData.Gi[0] ;
        	pIp -> mAttitude.angle[1] = pIp -> mGyroData.Gi[1] ;
		}
	}

	else
	{
		pIp -> mAttitude.angle[0] = 0 ;
    	pIp -> mAttitude.angle[1] = 0 ;
	}

	pIp -> mAttitude.rate[0] = pIp -> mGyroData.W[0] ;
    pIp -> mAttitude.rate[1] = pIp -> mGyroData.W[1] ;
	pIp -> mAttitude.rate[2] = pIp -> mGyroData.W[2] ;

	return ;
}
文件 3_output/test_ip/InputproceedFun.c 已成功创建并写入。
预注释InputproceedFun.c文件的内容为: 

#include "../verification_stdlib.h"
#include "../verification_list.h"
#include "../int_array_def.h"

/*@ Extern Coq (Result: Assertion) */
/*@ Extern Coq (Results: Z -> Assertion) */

    typedef struct TAG_DSS_DATA
{	
	int     stateFlag_A;		
	int     stateFlag_B;			
	int 	royaw;
	int  	piyaw;
    int     flgSP;				
}SDSSData;
typedef struct TAG_DIGITAL_GYRO_DATA
{

    int		countPick[9];		 	
    int 	Gi[3];				 
    int 	wa[9];				 
    int 	wal[9];				 
 	int		JoinTotal;          
 	int  	gyroStatus0;		
 	int 	gyroStatus1;		 
    int 	W[3];				 
    int 	SignFlag[9] ; 		   
	int 	Rtemp[3][5];		 
	int 	stateFlag[9];		
	
} SGyroData;
typedef struct TAG_ATTITUDE_PARA     	
{                                    	
	                                 	
	int 	angle[3];			 
	int 	rate[3]; 			 
	                                 	
}SAttitude;
typedef struct __Inputproceed
{
	int  		       flgGryoCalc;
	int                flgMode;
	SDSSData			mDSSData;
	SAttitude			mAttitude;
	SGyroData			mGyroData;

} Inputproceed;

void InputproceedFun(Inputproceed *pIp)

/*@
With pIp_flgGryoCalc pIp_flgMode pIp_mDSSData_stateFlag_A pIp_mDSSData_stateFlag_B pIp_mDSSData_royaw pIp_mDSSData_piyaw pIp_mDSSData_flgSP pIp_mAttitude_angle_l pIp_mAttitude_angle_0 pIp_mAttitude_angle_1 pIp_mAttitude_angle_2 pIp_mAttitude_rate_l pIp_mAttitude_rate_0 pIp_mAttitude_rate_1 pIp_mAttitude_rate_2 pIp_mGyroData_countPick_l pIp_mGyroData_countPick_0 pIp_mGyroData_countPick_1 pIp_mGyroData_countPick_2 pIp_mGyroData_countPick_3 pIp_mGyroData_countPick_4 pIp_mGyroData_countPick_5 pIp_mGyroData_countPick_6 pIp_mGyroData_countPick_7 pIp_mGyroData_countPick_8 pIp_mGyroData_Gi_l pIp_mGyroData_Gi_0 pIp_mGyroData_Gi_1 pIp_mGyroData_Gi_2 pIp_mGyroData_wa_l pIp_mGyroData_wa_0 pIp_mGyroData_wa_1 pIp_mGyroData_wa_2 pIp_mGyroData_wa_3 pIp_mGyroData_wa_4 pIp_mGyroData_wa_5 pIp_mGyroData_wa_6 pIp_mGyroData_wa_7 pIp_mGyroData_wa_8 pIp_mGyroData_wal_l pIp_mGyroData_wal_0 pIp_mGyroData_wal_1 pIp_mGyroData_wal_2 pIp_mGyroData_wal_3 pIp_mGyroData_wal_4 pIp_mGyroData_wal_5 pIp_mGyroData_wal_6 pIp_mGyroData_wal_7 pIp_mGyroData_wal_8 pIp_mGyroData_JoinTotal pIp_mGyroData_gyroStatus0 pIp_mGyroData_gyroStatus1 pIp_mGyroData_W_l pIp_mGyroData_W_0 pIp_mGyroData_W_1 pIp_mGyroData_W_2 pIp_mGyroData_SignFlag_l pIp_mGyroData_SignFlag_0 pIp_mGyroData_SignFlag_1 pIp_mGyroData_SignFlag_2 pIp_mGyroData_SignFlag_3 pIp_mGyroData_SignFlag_4 pIp_mGyroData_SignFlag_5 pIp_mGyroData_SignFlag_6 pIp_mGyroData_SignFlag_7 pIp_mGyroData_SignFlag_8 pIp_mGyroData_Rtemp_l pIp_mGyroData_Rtemp_0 pIp_mGyroData_Rtemp_1 pIp_mGyroData_Rtemp_2 pIp_mGyroData_stateFlag_l pIp_mGyroData_stateFlag_0 pIp_mGyroData_stateFlag_1 pIp_mGyroData_stateFlag_2 pIp_mGyroData_stateFlag_3 pIp_mGyroData_stateFlag_4 pIp_mGyroData_stateFlag_5 pIp_mGyroData_stateFlag_6 pIp_mGyroData_stateFlag_7 pIp_mGyroData_stateFlag_8
Require pIp->flgGryoCalc == pIp_flgGryoCalc && pIp->flgMode == pIp_flgMode && pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A && pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B && pIp->mDSSData.royaw == pIp_mDSSData_royaw && pIp->mDSSData.piyaw == pIp_mDSSData_piyaw && pIp->mDSSData.flgSP == pIp_mDSSData_flgSP && store_int_array(pIp->mAttitude.angle,3, pIp_mAttitude_angle_l) && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && store_int_array(pIp->mAttitude.rate,3, pIp_mAttitude_rate_l) && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(pIp->mGyroData.countPick,9, pIp_mGyroData_countPick_l) && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && store_int_array(pIp->mGyroData.Gi,3, pIp_mGyroData_Gi_l) && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && store_int_array(pIp->mGyroData.wa,9, pIp_mGyroData_wa_l) && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && store_int_array(pIp->mGyroData.wal,9, pIp_mGyroData_wal_l) && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal && pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0 && pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1 && store_int_array(pIp->mGyroData.W,3, pIp_mGyroData_W_l) && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && store_int_array(pIp->mGyroData.SignFlag,9, pIp_mGyroData_SignFlag_l) && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && store_int_array(pIp->mGyroData.Rtemp,3, pIp_mGyroData_Rtemp_l) && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && store_int_array(pIp->mGyroData.stateFlag,9, pIp_mGyroData_stateFlag_l) && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8
Ensure emp
*/{

	if ( pIp->flgMode == 0x33 )
	{
		if ( pIp -> mDSSData.flgSP == 1 )
		{
        	pIp -> mAttitude.angle[0] = pIp -> mDSSData.royaw ;
        	pIp -> mAttitude.angle[1] = pIp -> mDSSData.piyaw ;

       		pIp -> mGyroData.Gi[0] = pIp -> mDSSData.royaw ;
       		pIp -> mGyroData.Gi[1] = pIp -> mDSSData.piyaw ;
		}
		else
		{
		    pIp -> mAttitude.angle[0] = pIp -> mGyroData.Gi[0] ;
        	pIp -> mAttitude.angle[1] = pIp -> mGyroData.Gi[1] ;
		}
	}

	else
	{
		pIp -> mAttitude.angle[0] = 0 ;
    	pIp -> mAttitude.angle[1] = 0 ;
	}

	pIp -> mAttitude.rate[0] = pIp -> mGyroData.W[0] ;
    pIp -> mAttitude.rate[1] = pIp -> mGyroData.W[1] ;
	pIp -> mAttitude.rate[2] = pIp -> mGyroData.W[2] ;

	return ;
}
文件 1_output/test_ip/InputproceedFun.c 已成功创建并写入。
文件 2_output/test_ip/InputproceedFun.c 已成功创建并写入。

GENERATE FUNCTION SUMMARY FOR InputproceedFun
========================================

----------------------------------------
路径约束与返回值
Combined path condition:
(pIp_flgMode != 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mAttitude_angle_l))) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.Gi, 3, pIp_mGyroData_Gi_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l)) || (pIp_mDSSData_flgSP != 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, pIp_mGyroData_Gi_l[1], replace_Znth(0, pIp_mGyroData_Gi_l[0], pIp_mAttitude_angle_l))) * store_int_array(&pIp->mGyroData.Gi, 3, pIp_mGyroData_Gi_l) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l)) || (pIp_mDSSData_flgSP == 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mGyroData.Gi, 3, replace_Znth(1, pIp_mDSSData_piyaw, replace_Znth(0, pIp_mDSSData_royaw, pIp_mGyroData_Gi_l))) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, pIp_mDSSData_piyaw, replace_Znth(0, pIp_mDSSData_royaw, pIp_mAttitude_angle_l))) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l))
----------------------------------------

开始生成完整的 InputproceedFun 的注释代码
完整注释InputproceedFun.c 文件的内容为: 

#include "../verification_stdlib.h"
#include "../verification_list.h"
#include "../int_array_def.h"

/*@ Extern Coq (Result: Assertion) */
/*@ Extern Coq (Results: Z -> Assertion) */

    typedef struct TAG_DSS_DATA
{	
	int     stateFlag_A;		
	int     stateFlag_B;			
	int 	royaw;
	int  	piyaw;
    int     flgSP;				
}SDSSData;
typedef struct TAG_DIGITAL_GYRO_DATA
{

    int		countPick[9];		 	
    int 	Gi[3];				 
    int 	wa[9];				 
    int 	wal[9];				 
 	int		JoinTotal;          
 	int  	gyroStatus0;		
 	int 	gyroStatus1;		 
    int 	W[3];				 
    int 	SignFlag[9] ; 		   
	int 	Rtemp[3][5];		 
	int 	stateFlag[9];		
	
} SGyroData;
typedef struct TAG_ATTITUDE_PARA     	
{                                    	
	                                 	
	int 	angle[3];			 
	int 	rate[3]; 			 
	                                 	
}SAttitude;
typedef struct __Inputproceed
{
	int  		       flgGryoCalc;
	int                flgMode;
	SDSSData			mDSSData;
	SAttitude			mAttitude;
	SGyroData			mGyroData;

} Inputproceed;

void InputproceedFun(Inputproceed *pIp)

/*@
With pIp_flgGryoCalc pIp_flgMode pIp_mDSSData_stateFlag_A pIp_mDSSData_stateFlag_B pIp_mDSSData_royaw pIp_mDSSData_piyaw pIp_mDSSData_flgSP pIp_mAttitude_angle_l pIp_mAttitude_angle_0 pIp_mAttitude_angle_1 pIp_mAttitude_angle_2 pIp_mAttitude_rate_l pIp_mAttitude_rate_0 pIp_mAttitude_rate_1 pIp_mAttitude_rate_2 pIp_mGyroData_countPick_l pIp_mGyroData_countPick_0 pIp_mGyroData_countPick_1 pIp_mGyroData_countPick_2 pIp_mGyroData_countPick_3 pIp_mGyroData_countPick_4 pIp_mGyroData_countPick_5 pIp_mGyroData_countPick_6 pIp_mGyroData_countPick_7 pIp_mGyroData_countPick_8 pIp_mGyroData_Gi_l pIp_mGyroData_Gi_0 pIp_mGyroData_Gi_1 pIp_mGyroData_Gi_2 pIp_mGyroData_wa_l pIp_mGyroData_wa_0 pIp_mGyroData_wa_1 pIp_mGyroData_wa_2 pIp_mGyroData_wa_3 pIp_mGyroData_wa_4 pIp_mGyroData_wa_5 pIp_mGyroData_wa_6 pIp_mGyroData_wa_7 pIp_mGyroData_wa_8 pIp_mGyroData_wal_l pIp_mGyroData_wal_0 pIp_mGyroData_wal_1 pIp_mGyroData_wal_2 pIp_mGyroData_wal_3 pIp_mGyroData_wal_4 pIp_mGyroData_wal_5 pIp_mGyroData_wal_6 pIp_mGyroData_wal_7 pIp_mGyroData_wal_8 pIp_mGyroData_JoinTotal pIp_mGyroData_gyroStatus0 pIp_mGyroData_gyroStatus1 pIp_mGyroData_W_l pIp_mGyroData_W_0 pIp_mGyroData_W_1 pIp_mGyroData_W_2 pIp_mGyroData_SignFlag_l pIp_mGyroData_SignFlag_0 pIp_mGyroData_SignFlag_1 pIp_mGyroData_SignFlag_2 pIp_mGyroData_SignFlag_3 pIp_mGyroData_SignFlag_4 pIp_mGyroData_SignFlag_5 pIp_mGyroData_SignFlag_6 pIp_mGyroData_SignFlag_7 pIp_mGyroData_SignFlag_8 pIp_mGyroData_Rtemp_l pIp_mGyroData_Rtemp_0 pIp_mGyroData_Rtemp_1 pIp_mGyroData_Rtemp_2 pIp_mGyroData_stateFlag_l pIp_mGyroData_stateFlag_0 pIp_mGyroData_stateFlag_1 pIp_mGyroData_stateFlag_2 pIp_mGyroData_stateFlag_3 pIp_mGyroData_stateFlag_4 pIp_mGyroData_stateFlag_5 pIp_mGyroData_stateFlag_6 pIp_mGyroData_stateFlag_7 pIp_mGyroData_stateFlag_8
Require pIp->flgGryoCalc == pIp_flgGryoCalc && pIp->flgMode == pIp_flgMode && pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A && pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B && pIp->mDSSData.royaw == pIp_mDSSData_royaw && pIp->mDSSData.piyaw == pIp_mDSSData_piyaw && pIp->mDSSData.flgSP == pIp_mDSSData_flgSP && store_int_array(pIp->mAttitude.angle,3, pIp_mAttitude_angle_l) && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && store_int_array(pIp->mAttitude.rate,3, pIp_mAttitude_rate_l) && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(pIp->mGyroData.countPick,9, pIp_mGyroData_countPick_l) && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && store_int_array(pIp->mGyroData.Gi,3, pIp_mGyroData_Gi_l) && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && store_int_array(pIp->mGyroData.wa,9, pIp_mGyroData_wa_l) && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && store_int_array(pIp->mGyroData.wal,9, pIp_mGyroData_wal_l) && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal && pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0 && pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1 && store_int_array(pIp->mGyroData.W,3, pIp_mGyroData_W_l) && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && store_int_array(pIp->mGyroData.SignFlag,9, pIp_mGyroData_SignFlag_l) && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && store_int_array(pIp->mGyroData.Rtemp,3, pIp_mGyroData_Rtemp_l) && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && store_int_array(pIp->mGyroData.stateFlag,9, pIp_mGyroData_stateFlag_l) && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8
Ensure (pIp_flgMode != 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mAttitude_angle_l))) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.Gi, 3, pIp_mGyroData_Gi_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l)) || (pIp_mDSSData_flgSP != 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, pIp_mGyroData_Gi_l[1], replace_Znth(0, pIp_mGyroData_Gi_l[0], pIp_mAttitude_angle_l))) * store_int_array(&pIp->mGyroData.Gi, 3, pIp_mGyroData_Gi_l) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l)) || (pIp_mDSSData_flgSP == 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mGyroData.Gi, 3, replace_Znth(1, pIp_mDSSData_piyaw, replace_Znth(0, pIp_mDSSData_royaw, pIp_mGyroData_Gi_l))) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, pIp_mDSSData_piyaw, replace_Znth(0, pIp_mDSSData_royaw, pIp_mAttitude_angle_l))) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l))
*/
{

	if ( pIp->flgMode == 0x33 )
	{
		if ( pIp -> mDSSData.flgSP == 1 )
		{
        	pIp -> mAttitude.angle[0] = pIp -> mDSSData.royaw ;
        	pIp -> mAttitude.angle[1] = pIp -> mDSSData.piyaw ;

       		pIp -> mGyroData.Gi[0] = pIp -> mDSSData.royaw ;
       		pIp -> mGyroData.Gi[1] = pIp -> mDSSData.piyaw ;
		}
		else
		{
		    pIp -> mAttitude.angle[0] = pIp -> mGyroData.Gi[0] ;
        	pIp -> mAttitude.angle[1] = pIp -> mGyroData.Gi[1] ;
		}
	}

	else
	{
		pIp -> mAttitude.angle[0] = 0 ;
    	pIp -> mAttitude.angle[1] = 0 ;
	}

	pIp -> mAttitude.rate[0] = pIp -> mGyroData.W[0] ;
    pIp -> mAttitude.rate[1] = pIp -> mGyroData.W[1] ;
	pIp -> mAttitude.rate[2] = pIp -> mGyroData.W[2] ;

	return ;
}
文件 2_output/test_ip/InputproceedFun.c 已成功创建并写入。
开始生成 InputproceedFun 的 ACSL 规约
Variable Map: {'pIp->flgGryoCalc': 'pIp_flgGryoCalc', 'pIp->flgMode': 'pIp_flgMode', 'pIp->mDSSData.stateFlag_A': 'pIp_mDSSData_stateFlag_A', 'pIp->mDSSData.stateFlag_B': 'pIp_mDSSData_stateFlag_B', 'pIp->mDSSData.royaw': 'pIp_mDSSData_royaw', 'pIp->mDSSData.piyaw': 'pIp_mDSSData_piyaw', 'pIp->mDSSData.flgSP': 'pIp_mDSSData_flgSP', 'pIp->mGyroData.JoinTotal': 'pIp_mGyroData_JoinTotal', 'pIp->mGyroData.gyroStatus0': 'pIp_mGyroData_gyroStatus0', 'pIp->mGyroData.gyroStatus1': 'pIp_mGyroData_gyroStatus1'}
Path Condition: pIp_flgMode != 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 
Result: None
Variable Map: {'pIp->flgGryoCalc': 'pIp_flgGryoCalc', 'pIp->flgMode': 'pIp_flgMode', 'pIp->mDSSData.stateFlag_A': 'pIp_mDSSData_stateFlag_A', 'pIp->mDSSData.stateFlag_B': 'pIp_mDSSData_stateFlag_B', 'pIp->mDSSData.royaw': 'pIp_mDSSData_royaw', 'pIp->mDSSData.piyaw': 'pIp_mDSSData_piyaw', 'pIp->mDSSData.flgSP': 'pIp_mDSSData_flgSP', 'pIp->mGyroData.JoinTotal': 'pIp_mGyroData_JoinTotal', 'pIp->mGyroData.gyroStatus0': 'pIp_mGyroData_gyroStatus0', 'pIp->mGyroData.gyroStatus1': 'pIp_mGyroData_gyroStatus1'}
Path Condition: pIp_mDSSData_flgSP != 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 
Result: None
Variable Map: {'pIp->flgGryoCalc': 'pIp_flgGryoCalc', 'pIp->flgMode': 'pIp_flgMode', 'pIp->mDSSData.stateFlag_A': 'pIp_mDSSData_stateFlag_A', 'pIp->mDSSData.stateFlag_B': 'pIp_mDSSData_stateFlag_B', 'pIp->mDSSData.royaw': 'pIp_mDSSData_royaw', 'pIp->mDSSData.piyaw': 'pIp_mDSSData_piyaw', 'pIp->mDSSData.flgSP': 'pIp_mDSSData_flgSP', 'pIp->mGyroData.JoinTotal': 'pIp_mGyroData_JoinTotal', 'pIp->mGyroData.gyroStatus0': 'pIp_mGyroData_gyroStatus0', 'pIp->mGyroData.gyroStatus1': 'pIp_mGyroData_gyroStatus1'}
Path Condition: pIp_mDSSData_flgSP == 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 
Result: None
InputproceedFun.c 的规约的内容为: 
typedef struct TAG_DSS_DATA
{	
	int     stateFlag_A;		
	int     stateFlag_B;			
	int 	royaw;
	int  	piyaw;
    int     flgSP;				
}SDSSData;
typedef struct TAG_DIGITAL_GYRO_DATA
{

    int		countPick[9];		 	
    int 	Gi[3];				 
    int 	wa[9];				 
    int 	wal[9];				 
 	int		JoinTotal;          
 	int  	gyroStatus0;		
 	int 	gyroStatus1;		 
    int 	W[3];				 
    int 	SignFlag[9] ; 		   
	int 	Rtemp[3][5];		 
	int 	stateFlag[9];		
	
} SGyroData;
typedef struct TAG_ATTITUDE_PARA     	
{                                    	
	                                 	
	int 	angle[3];			 
	int 	rate[3]; 			 
	                                 	
}SAttitude;
typedef struct __Inputproceed
{
	int  		       flgGryoCalc;
	int                flgMode;
	SDSSData			mDSSData;
	SAttitude			mAttitude;
	SGyroData			mGyroData;

} Inputproceed;

/*@
 requires \valid(pIp) ;
 requires \separated(pIp) ;

ensures \old(pIp->flgMode) != 51 && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) && pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) ==> pIp->flgGryoCalc == \old(pIp->flgGryoCalc)&&pIp->flgMode == \old(pIp->flgMode)&&pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP)&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == \old(pIp->mGyroData.gyroStatus0)&&pIp->mGyroData.gyroStatus1 == \old(pIp->mGyroData.gyroStatus1);

ensures \old(pIp->mDSSData.flgSP) != 1 && \old(pIp->flgMode) == 51 && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) && pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) ==> pIp->flgGryoCalc == \old(pIp->flgGryoCalc)&&pIp->flgMode == \old(pIp->flgMode)&&pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP)&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == \old(pIp->mGyroData.gyroStatus0)&&pIp->mGyroData.gyroStatus1 == \old(pIp->mGyroData.gyroStatus1);

ensures \old(pIp->mDSSData.flgSP) == 1 && \old(pIp->flgMode) == 51 && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) && pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) ==> pIp->flgGryoCalc == \old(pIp->flgGryoCalc)&&pIp->flgMode == \old(pIp->flgMode)&&pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP)&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == \old(pIp->mGyroData.gyroStatus0)&&pIp->mGyroData.gyroStatus1 == \old(pIp->mGyroData.gyroStatus1);

*/

void InputproceedFun(Inputproceed *pIp)

{

	if ( pIp->flgMode == 0x33 )
	{
		if ( pIp -> mDSSData.flgSP == 1 )
		{
        	pIp -> mAttitude.angle[0] = pIp -> mDSSData.royaw ;
        	pIp -> mAttitude.angle[1] = pIp -> mDSSData.piyaw ;

       		pIp -> mGyroData.Gi[0] = pIp -> mDSSData.royaw ;
       		pIp -> mGyroData.Gi[1] = pIp -> mDSSData.piyaw ;
		}
		else
		{
		    pIp -> mAttitude.angle[0] = pIp -> mGyroData.Gi[0] ;
        	pIp -> mAttitude.angle[1] = pIp -> mGyroData.Gi[1] ;
		}
	}

	else
	{
		pIp -> mAttitude.angle[0] = 0 ;
    	pIp -> mAttitude.angle[1] = 0 ;
	}

	pIp -> mAttitude.rate[0] = pIp -> mGyroData.W[0] ;
    pIp -> mAttitude.rate[1] = pIp -> mGyroData.W[1] ;
	pIp -> mAttitude.rate[2] = pIp -> mGyroData.W[2] ;

	return ;
}
文件 output/test_ip/InputproceedFun.c 已成功创建并写入。

SUMMARY FOR InputproceedFun
========================================


函数 InputproceedFun 的 VST Summary 为:
/*@
With pIp_flgGryoCalc pIp_flgMode pIp_mDSSData_stateFlag_A pIp_mDSSData_stateFlag_B pIp_mDSSData_royaw pIp_mDSSData_piyaw pIp_mDSSData_flgSP pIp_mAttitude_angle_l pIp_mAttitude_angle_0 pIp_mAttitude_angle_1 pIp_mAttitude_angle_2 pIp_mAttitude_rate_l pIp_mAttitude_rate_0 pIp_mAttitude_rate_1 pIp_mAttitude_rate_2 pIp_mGyroData_countPick_l pIp_mGyroData_countPick_0 pIp_mGyroData_countPick_1 pIp_mGyroData_countPick_2 pIp_mGyroData_countPick_3 pIp_mGyroData_countPick_4 pIp_mGyroData_countPick_5 pIp_mGyroData_countPick_6 pIp_mGyroData_countPick_7 pIp_mGyroData_countPick_8 pIp_mGyroData_Gi_l pIp_mGyroData_Gi_0 pIp_mGyroData_Gi_1 pIp_mGyroData_Gi_2 pIp_mGyroData_wa_l pIp_mGyroData_wa_0 pIp_mGyroData_wa_1 pIp_mGyroData_wa_2 pIp_mGyroData_wa_3 pIp_mGyroData_wa_4 pIp_mGyroData_wa_5 pIp_mGyroData_wa_6 pIp_mGyroData_wa_7 pIp_mGyroData_wa_8 pIp_mGyroData_wal_l pIp_mGyroData_wal_0 pIp_mGyroData_wal_1 pIp_mGyroData_wal_2 pIp_mGyroData_wal_3 pIp_mGyroData_wal_4 pIp_mGyroData_wal_5 pIp_mGyroData_wal_6 pIp_mGyroData_wal_7 pIp_mGyroData_wal_8 pIp_mGyroData_JoinTotal pIp_mGyroData_gyroStatus0 pIp_mGyroData_gyroStatus1 pIp_mGyroData_W_l pIp_mGyroData_W_0 pIp_mGyroData_W_1 pIp_mGyroData_W_2 pIp_mGyroData_SignFlag_l pIp_mGyroData_SignFlag_0 pIp_mGyroData_SignFlag_1 pIp_mGyroData_SignFlag_2 pIp_mGyroData_SignFlag_3 pIp_mGyroData_SignFlag_4 pIp_mGyroData_SignFlag_5 pIp_mGyroData_SignFlag_6 pIp_mGyroData_SignFlag_7 pIp_mGyroData_SignFlag_8 pIp_mGyroData_Rtemp_l pIp_mGyroData_Rtemp_0 pIp_mGyroData_Rtemp_1 pIp_mGyroData_Rtemp_2 pIp_mGyroData_stateFlag_l pIp_mGyroData_stateFlag_0 pIp_mGyroData_stateFlag_1 pIp_mGyroData_stateFlag_2 pIp_mGyroData_stateFlag_3 pIp_mGyroData_stateFlag_4 pIp_mGyroData_stateFlag_5 pIp_mGyroData_stateFlag_6 pIp_mGyroData_stateFlag_7 pIp_mGyroData_stateFlag_8
Require pIp->flgGryoCalc == pIp_flgGryoCalc && pIp->flgMode == pIp_flgMode && pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A && pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B && pIp->mDSSData.royaw == pIp_mDSSData_royaw && pIp->mDSSData.piyaw == pIp_mDSSData_piyaw && pIp->mDSSData.flgSP == pIp_mDSSData_flgSP && store_int_array(pIp->mAttitude.angle,3, pIp_mAttitude_angle_l) && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && store_int_array(pIp->mAttitude.rate,3, pIp_mAttitude_rate_l) && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(pIp->mGyroData.countPick,9, pIp_mGyroData_countPick_l) && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && store_int_array(pIp->mGyroData.Gi,3, pIp_mGyroData_Gi_l) && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && store_int_array(pIp->mGyroData.wa,9, pIp_mGyroData_wa_l) && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && store_int_array(pIp->mGyroData.wal,9, pIp_mGyroData_wal_l) && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal && pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0 && pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1 && store_int_array(pIp->mGyroData.W,3, pIp_mGyroData_W_l) && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && store_int_array(pIp->mGyroData.SignFlag,9, pIp_mGyroData_SignFlag_l) && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && store_int_array(pIp->mGyroData.Rtemp,3, pIp_mGyroData_Rtemp_l) && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && store_int_array(pIp->mGyroData.stateFlag,9, pIp_mGyroData_stateFlag_l) && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8
Ensure (pIp_flgMode != 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, 0, replace_Znth(0, 0, pIp_mAttitude_angle_l))) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.Gi, 3, pIp_mGyroData_Gi_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l)) || (pIp_mDSSData_flgSP != 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, pIp_mGyroData_Gi_l[1], replace_Znth(0, pIp_mGyroData_Gi_l[0], pIp_mAttitude_angle_l))) * store_int_array(&pIp->mGyroData.Gi, 3, pIp_mGyroData_Gi_l) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l)) || (pIp_mDSSData_flgSP == 1 && pIp_flgMode == 51 && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && store_int_array(&pIp->mAttitude.rate, 3, replace_Znth(2, pIp_mGyroData_W_l[2], replace_Znth(1, pIp_mGyroData_W_l[1], replace_Znth(0, pIp_mGyroData_W_l[0], pIp_mAttitude_rate_l)))) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mGyroData.Gi, 3, replace_Znth(1, pIp_mDSSData_piyaw, replace_Znth(0, pIp_mDSSData_royaw, pIp_mGyroData_Gi_l))) * store_int_array(&pIp->mAttitude.angle, 3, replace_Znth(1, pIp_mDSSData_piyaw, replace_Znth(0, pIp_mDSSData_royaw, pIp_mAttitude_angle_l))) * (pIp->flgGryoCalc == pIp_flgGryoCalc) * (pIp->flgMode == pIp_flgMode) * (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0) * (pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l))
*/

函数 InputproceedFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) ;
 requires \separated(pIp) ;

ensures \old(pIp->flgMode) != 51 && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) && pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) ==> pIp->flgGryoCalc == \old(pIp->flgGryoCalc)&&pIp->flgMode == \old(pIp->flgMode)&&pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP)&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == \old(pIp->mGyroData.gyroStatus0)&&pIp->mGyroData.gyroStatus1 == \old(pIp->mGyroData.gyroStatus1);

ensures \old(pIp->mDSSData.flgSP) != 1 && \old(pIp->flgMode) == 51 && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) && pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) ==> pIp->flgGryoCalc == \old(pIp->flgGryoCalc)&&pIp->flgMode == \old(pIp->flgMode)&&pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP)&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == \old(pIp->mGyroData.gyroStatus0)&&pIp->mGyroData.gyroStatus1 == \old(pIp->mGyroData.gyroStatus1);

ensures \old(pIp->mDSSData.flgSP) == 1 && \old(pIp->flgMode) == 51 && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) && pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) ==> pIp->flgGryoCalc == \old(pIp->flgGryoCalc)&&pIp->flgMode == \old(pIp->flgMode)&&pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP)&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == \old(pIp->mGyroData.gyroStatus0)&&pIp->mGyroData.gyroStatus1 == \old(pIp->mGyroData.gyroStatus1);

*/


VERIFICATION FOR InputproceedFun
========================================

syntax Correct
Loop Invariant:
[]

Assertion:
[]

Post Condition:
[True, True, True]

