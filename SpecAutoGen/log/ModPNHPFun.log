
FUNCTION INITIALIZATION
========================================

type_name:__ModPNHP
初始待处理函数: ['ModPNHPFun']

GENERATE ANNOTATION FOR ModPNHPFun
========================================

函数 ModPNHPFun 已经初始化
开始生成 ModPNHPFun 的注释代码
文件 3_output/test_ip/ModPNHPFun.c 已成功创建并写入。
文件 1_output/test_ip/ModPNHPFun.c 已成功创建并写入。
文件 2_output/test_ip/ModPNHPFun.c 已成功创建并写入。

GENERATE FUNCTION SUMMARY FOR ModPNHPFun
========================================

----------------------------------------
路径约束与返回值
Combined path condition:
((pIp->x == pIp_x) * (pIp->halfperiod == pIp_halfperiod) * (pIp->npp2 == pIp_x - 2 * pIp_halfperiod) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_x - 2 * pIp_halfperiod))
----------------------------------------

开始生成完整的 ModPNHPFun 的注释代码
文件 2_output/test_ip/ModPNHPFun.c 已成功创建并写入。
开始生成 ModPNHPFun 的 ACSL 规约
Variable Map: {'pIp->x': 'pIp_x', 'pIp->halfperiod': 'pIp_halfperiod', 'pIp->npp2': 'pIp_x - 2 * pIp_halfperiod', 'pIp->ret': 'pIp_ret', '*pIp_ret': 'pIp_x - 2 * pIp_halfperiod'}
Path Condition: None
Result: None
文件 3_output/test_ip/ModPNHPFun.c 已成功创建并写入。

SUMMARY FOR ModPNHPFun
========================================


函数 ModPNHPFun 的 VST Summary 为:
/*@
With pIp_x pIp_halfperiod pIp_npp2 pIp_ret_v pIp_ret
Require pIp->x == pIp_x && pIp->halfperiod == pIp_halfperiod && pIp->npp2 == pIp_npp2 && *(pIp->ret) == pIp_ret_v && (pIp->ret) == pIp_ret
Ensure ((pIp->x == pIp_x) * (pIp->halfperiod == pIp_halfperiod) * (pIp->npp2 == pIp_x - 2 * pIp_halfperiod) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_x - 2 * pIp_halfperiod))
*/

函数 ModPNHPFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->ret) ;
 requires \separated(pIp,pIp->ret) ;

ensures pIp->x == \old(pIp->x)&&pIp->halfperiod == \old(pIp->halfperiod)&&pIp->npp2 == \old(pIp->x) - 2 * \old(pIp->halfperiod)&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == \old(pIp->x) - 2 * \old(pIp->halfperiod);

*/


VERIFICATION FOR ModPNHPFun
========================================

syntax Correct
Loop Invariant:
[]

Assertion:
[]

Post Condition:
[True]


GENERLIZATION FOR ModPNHPFun
========================================

Z3 Expression: And(And(And(And(pIp_x == old_pIp_x,
                pIp_halfperiod == old_pIp_halfperiod),
            pIp_npp2 == old_pIp_x - 2*old_pIp_halfperiod),
        pIp_ret == old_pIp_ret),
    old_pIp_ret_v == old_pIp_x - 2*old_pIp_halfperiod)

ModPNHPFun 的最大非冗余集合:
[pIp_ret == old_pIp_ret, pIp_npp2 == old_pIp_ret_v, pIp_x == old_pIp_x, pIp_halfperiod == old_pIp_halfperiod]
