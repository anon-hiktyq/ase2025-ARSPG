2025-07-05 02:30:55,455 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:30:55,455 - INFO  - ========================================

2025-07-05 02:30:55,500 - INFO  - 初始待处理函数: ['SAMSubModeCruiseFun']
2025-07-05 02:30:55,501 - INFO  - 
GENERATE ANNOTATION FOR SAMSubModeCruiseFun
2025-07-05 02:30:55,501 - INFO  - ========================================

2025-07-05 02:30:55,501 - INFO  - 函数 SAMSubModeCruiseFun 已经初始化
2025-07-05 02:30:55,501 - INFO  - 开始生成 SAMSubModeCruiseFun 的注释代码
2025-07-05 02:30:55,503 - INFO  - 
GENERATE FUNCTION SUMMARY FOR SAMSubModeCruiseFun
2025-07-05 02:30:55,504 - INFO  - ========================================

2025-07-05 02:30:55,516 - INFO  - 开始生成完整的 SAMSubModeCruiseFun 的注释代码
2025-07-05 02:30:55,525 - INFO  - 开始生成 SAMSubModeCruiseFun 的 ACSL 规约
2025-07-05 02:30:55,536 - INFO  - 
SUMMARY FOR SAMSubModeCruiseFun
2025-07-05 02:30:55,536 - INFO  - ========================================

2025-07-05 02:30:55,536 - INFO  - 
函数 SAMSubModeCruiseFun 的 VST Summary 为:
/*@
With pIp_countMode pIp_mFWarning_CWsp pIp_mFWarning_CWtf pIp_mFWarning_Wsp pIp_mFWarning_Wtf pIp_mFWarning_Wav pIp_mFWarning_flgups pIp_mFWarning_flgModeChange pIp_mFWarning_countAV pIp_mFWarning_countSPLost pIp_mFWarning_countSPSeen pIp_mFWarning_countSPset pIp_mFWarning_countUPSpc pIp_Count160ms
Require pIp->countMode == pIp_countMode && pIp->mFWarning.CWsp == pIp_mFWarning_CWsp && pIp->mFWarning.CWtf == pIp_mFWarning_CWtf && pIp->mFWarning.Wsp == pIp_mFWarning_Wsp && pIp->mFWarning.Wtf == pIp_mFWarning_Wtf && pIp->mFWarning.Wav == pIp_mFWarning_Wav && pIp->mFWarning.flgups == pIp_mFWarning_flgups && pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange && pIp->mFWarning.countAV == pIp_mFWarning_countAV && pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost && pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen && pIp->mFWarning.countSPset == pIp_mFWarning_countSPset && pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc && pIp->Count160ms == pIp_Count160ms
Ensure (pIp_countMode == 4000 && (pIp->countMode == pIp_countMode) * (pIp->mFWarning.CWsp == 1) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc) * (pIp->Count160ms == pIp_Count160ms)) || (pIp_countMode != 4000 && (pIp->countMode == pIp_countMode) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc) * (pIp->Count160ms == pIp_Count160ms))
*/
2025-07-05 02:30:55,536 - INFO  - 
函数 SAMSubModeCruiseFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) ;

ensures \old(pIp->countMode) == 4000 ==> pIp->countMode == \old(pIp->countMode)&&pIp->mFWarning.CWsp == 1&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)&&pIp->Count160ms == \old(pIp->Count160ms);

ensures \old(pIp->countMode) != 4000 ==> pIp->countMode == \old(pIp->countMode)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)&&pIp->Count160ms == \old(pIp->Count160ms);

*/

2025-07-05 02:30:55,744 - INFO  - 
VERIFICATION FOR SAMSubModeCruiseFun
2025-07-05 02:30:55,744 - INFO  - ========================================

2025-07-05 02:30:56,647 - INFO  - 
GENERLIZATION FOR SAMSubModeCruiseFun
2025-07-05 02:30:56,648 - INFO  - ========================================

2025-07-05 02:30:56,897 - INFO  - Original ACSL: \old(pIp->countMode) == 4000 ==> pIp->countMode == \old(pIp->countMode)&&pIp->mFWarning.CWsp == 1&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)&&pIp->Count160ms == \old(pIp->Count160ms)
2025-07-05 02:30:56,904 - INFO  - Z3 Expression: Implies(4000 == old_pIp_countMode,
        And(And(And(And(And(And(And(And(And(And(And(And(And(pIp_countMode ==
                                        old_pIp_countMode,
                                        1 ==
                                        pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                        pIp_mFWarning_flgups ==
                                        old_pIp_mFWarning_flgups),
                                    pIp_mFWarning_flgModeChange ==
                                    old_pIp_mFWarning_flgModeChange),
                                pIp_mFWarning_countAV ==
                                old_pIp_mFWarning_countAV),
                            pIp_mFWarning_countSPLost ==
                            old_pIp_mFWarning_countSPLost),
                        pIp_mFWarning_countSPSeen ==
                        old_pIp_mFWarning_countSPSeen),
                    pIp_mFWarning_countSPset ==
                    old_pIp_mFWarning_countSPset),
                pIp_mFWarning_countUPSpc ==
                old_pIp_mFWarning_countUPSpc),
            pIp_Count160ms == old_pIp_Count160ms))
2025-07-05 02:30:56,906 - INFO  - Original ACSL: \old(pIp->countMode) != 4000 ==> pIp->countMode == \old(pIp->countMode)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)&&pIp->Count160ms == \old(pIp->Count160ms);
2025-07-05 02:30:56,913 - INFO  - Z3 Expression: Implies(4000 != old_pIp_countMode,
        And(And(And(And(And(And(And(And(And(And(And(And(And(pIp_countMode ==
                                        old_pIp_countMode,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                        pIp_mFWarning_flgups ==
                                        old_pIp_mFWarning_flgups),
                                    pIp_mFWarning_flgModeChange ==
                                    old_pIp_mFWarning_flgModeChange),
                                pIp_mFWarning_countAV ==
                                old_pIp_mFWarning_countAV),
                            pIp_mFWarning_countSPLost ==
                            old_pIp_mFWarning_countSPLost),
                        pIp_mFWarning_countSPSeen ==
                        old_pIp_mFWarning_countSPSeen),
                    pIp_mFWarning_countSPset ==
                    old_pIp_mFWarning_countSPset),
                pIp_mFWarning_countUPSpc ==
                old_pIp_mFWarning_countUPSpc),
            pIp_Count160ms == old_pIp_Count160ms))
2025-07-05 02:30:57,979 - INFO  - 
SAMSubModeCruiseFun 的最大非冗余集合:
2025-07-05 02:30:57,980 - INFO  - [pIp_mFWarning_countUPSpc == old_pIp_mFWarning_countUPSpc, pIp_mFWarning_countSPset == old_pIp_mFWarning_countSPset, pIp_mFWarning_CWtf == old_pIp_mFWarning_CWtf, pIp_mFWarning_countAV == old_pIp_mFWarning_countAV, pIp_mFWarning_Wav == old_pIp_mFWarning_Wav, pIp_mFWarning_flgModeChange ==
old_pIp_mFWarning_flgModeChange, pIp_countMode == old_pIp_countMode, pIp_mFWarning_flgups == old_pIp_mFWarning_flgups, pIp_mFWarning_countSPSeen == old_pIp_mFWarning_countSPSeen, pIp_Count160ms == old_pIp_Count160ms, pIp_mFWarning_Wsp == old_pIp_mFWarning_Wsp, pIp_mFWarning_Wtf == old_pIp_mFWarning_Wtf, pIp_mFWarning_countSPLost == old_pIp_mFWarning_countSPLost]
