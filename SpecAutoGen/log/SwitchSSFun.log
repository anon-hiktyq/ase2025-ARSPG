2025-07-05 02:32:46,258 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:32:46,258 - INFO  - ========================================

2025-07-05 02:32:46,319 - INFO  - 初始待处理函数: ['SwitchSSFun']
2025-07-05 02:32:46,319 - INFO  - 
GENERATE ANNOTATION FOR SwitchSSFun
2025-07-05 02:32:46,319 - INFO  - ========================================

2025-07-05 02:32:46,319 - INFO  - 函数 SwitchSSFun 已经初始化
2025-07-05 02:32:46,320 - INFO  - 开始生成 SwitchSSFun 的注释代码
2025-07-05 02:32:46,321 - INFO  - 
GENERATE FUNCTION SUMMARY FOR SwitchSSFun
2025-07-05 02:32:46,321 - INFO  - ========================================

2025-07-05 02:32:46,333 - INFO  - 开始生成完整的 SwitchSSFun 的注释代码
2025-07-05 02:32:46,341 - INFO  - 开始生成 SwitchSSFun 的 ACSL 规约
2025-07-05 02:32:46,349 - INFO  - 
SUMMARY FOR SwitchSSFun
2025-07-05 02:32:46,349 - INFO  - ========================================

2025-07-05 02:32:46,349 - INFO  - 
函数 SwitchSSFun 的 VST Summary 为:
/*@
With pIp_mDSSData_stateFlag_A pIp_mDSSData_stateFlag_B pIp_mDSSData_royaw pIp_mDSSData_piyaw pIp_mDSSData_flgSP
Require pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A && pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B && pIp->mDSSData.royaw == pIp_mDSSData_royaw && pIp->mDSSData.piyaw == pIp_mDSSData_piyaw && pIp->mDSSData.flgSP == pIp_mDSSData_flgSP
Ensure (pIp_mDSSData_stateFlag_A != 0 && pIp_mDSSData_stateFlag_A == 1 && (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP)) || (pIp_mDSSData_stateFlag_A != 1 && pIp_mDSSData_stateFlag_A != 1 && (pIp->mDSSData.stateFlag_A == pIp_mDSSData_stateFlag_A) * (pIp->mDSSData.stateFlag_B == pIp_mDSSData_stateFlag_B) * (pIp->mDSSData.royaw == pIp_mDSSData_royaw) * (pIp->mDSSData.piyaw == pIp_mDSSData_piyaw) * (pIp->mDSSData.flgSP == pIp_mDSSData_flgSP))
*/
2025-07-05 02:32:46,349 - INFO  - 
函数 SwitchSSFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) ;

ensures \old(pIp->mDSSData.stateFlag_A) != 0 && \old(pIp->mDSSData.stateFlag_A) == 1 ==> pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP);

ensures \old(pIp->mDSSData.stateFlag_A) != 1 && \old(pIp->mDSSData.stateFlag_A) != 1 ==> pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP);

*/

2025-07-05 02:32:46,544 - INFO  - 
VERIFICATION FOR SwitchSSFun
2025-07-05 02:32:46,545 - INFO  - ========================================

2025-07-05 02:32:47,463 - INFO  - 
GENERLIZATION FOR SwitchSSFun
2025-07-05 02:32:47,463 - INFO  - ========================================

2025-07-05 02:32:47,518 - INFO  - Original ACSL: \old(pIp->mDSSData.stateFlag_A) != 0 && \old(pIp->mDSSData.stateFlag_A) == 1 ==> pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP)
2025-07-05 02:32:47,521 - INFO  - Z3 Expression: Implies(And(0 != old_pIp_mDSSData_stateFlag_A,
            1 == old_pIp_mDSSData_stateFlag_A),
        And(And(And(And(pIp_mDSSData_stateFlag_A ==
                        old_pIp_mDSSData_stateFlag_A,
                        pIp_mDSSData_stateFlag_B ==
                        old_pIp_mDSSData_stateFlag_B),
                    pIp_mDSSData_royaw ==
                    old_pIp_mDSSData_royaw),
                pIp_mDSSData_piyaw == old_pIp_mDSSData_piyaw),
            pIp_mDSSData_flgSP == old_pIp_mDSSData_flgSP))
2025-07-05 02:32:47,522 - INFO  - Original ACSL: \old(pIp->mDSSData.stateFlag_A) != 1 && \old(pIp->mDSSData.stateFlag_A) != 1 ==> pIp->mDSSData.stateFlag_A == \old(pIp->mDSSData.stateFlag_A)&&pIp->mDSSData.stateFlag_B == \old(pIp->mDSSData.stateFlag_B)&&pIp->mDSSData.royaw == \old(pIp->mDSSData.royaw)&&pIp->mDSSData.piyaw == \old(pIp->mDSSData.piyaw)&&pIp->mDSSData.flgSP == \old(pIp->mDSSData.flgSP);
2025-07-05 02:32:47,525 - INFO  - Z3 Expression: Implies(And(1 != old_pIp_mDSSData_stateFlag_A,
            1 != old_pIp_mDSSData_stateFlag_A),
        And(And(And(And(pIp_mDSSData_stateFlag_A ==
                        old_pIp_mDSSData_stateFlag_A,
                        pIp_mDSSData_stateFlag_B ==
                        old_pIp_mDSSData_stateFlag_B),
                    pIp_mDSSData_royaw ==
                    old_pIp_mDSSData_royaw),
                pIp_mDSSData_piyaw == old_pIp_mDSSData_piyaw),
            pIp_mDSSData_flgSP == old_pIp_mDSSData_flgSP))
2025-07-05 02:32:47,879 - INFO  - 
SwitchSSFun 的最大非冗余集合:
2025-07-05 02:32:47,879 - INFO  - [pIp_mDSSData_royaw == old_pIp_mDSSData_royaw, pIp_mDSSData_stateFlag_A == old_pIp_mDSSData_stateFlag_A, pIp_mDSSData_stateFlag_B == old_pIp_mDSSData_stateFlag_B, pIp_mDSSData_flgSP == old_pIp_mDSSData_flgSP, pIp_mDSSData_piyaw == old_pIp_mDSSData_piyaw]
