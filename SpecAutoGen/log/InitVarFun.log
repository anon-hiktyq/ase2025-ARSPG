2025-07-05 02:22:30,422 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:22:30,423 - INFO  - ========================================

2025-07-05 02:22:30,441 - INFO  - 初始待处理函数: ['InitVarFun']
2025-07-05 02:22:30,441 - INFO  - 
GENERATE ANNOTATION FOR InitVarFun
2025-07-05 02:22:30,442 - INFO  - ========================================

2025-07-05 02:22:30,442 - INFO  - 函数 InitVarFun 已经初始化
2025-07-05 02:22:30,442 - INFO  - 开始生成 InitVarFun 的注释代码
2025-07-05 02:22:30,444 - INFO  - 
GENERATE FUNCTION SUMMARY FOR InitVarFun
2025-07-05 02:22:30,444 - INFO  - ========================================

2025-07-05 02:22:30,838 - INFO  - 开始生成完整的 InitVarFun 的注释代码
2025-07-05 02:22:30,848 - INFO  - 开始生成 InitVarFun 的 ACSL 规约
2025-07-05 02:22:30,903 - INFO  - 
SUMMARY FOR InitVarFun
2025-07-05 02:22:30,903 - INFO  - ========================================

2025-07-05 02:22:30,903 - INFO  - 
函数 InitVarFun 的 VST Summary 为:
/*@
With pIp_countInt32ms pIp_countSate pIp_countPublic pIp_countMode pIp_flgPRSAM pIp_flgGryoCalc pIp_flg160INT pIp_mGyroData_countPick_l pIp_mGyroData_countPick_0 pIp_mGyroData_countPick_1 pIp_mGyroData_countPick_2 pIp_mGyroData_countPick_3 pIp_mGyroData_countPick_4 pIp_mGyroData_countPick_5 pIp_mGyroData_countPick_6 pIp_mGyroData_countPick_7 pIp_mGyroData_countPick_8 pIp_mGyroData_Gi_l pIp_mGyroData_Gi_0 pIp_mGyroData_Gi_1 pIp_mGyroData_Gi_2 pIp_mGyroData_wa_l pIp_mGyroData_wa_0 pIp_mGyroData_wa_1 pIp_mGyroData_wa_2 pIp_mGyroData_wa_3 pIp_mGyroData_wa_4 pIp_mGyroData_wa_5 pIp_mGyroData_wa_6 pIp_mGyroData_wa_7 pIp_mGyroData_wa_8 pIp_mGyroData_wal_l pIp_mGyroData_wal_0 pIp_mGyroData_wal_1 pIp_mGyroData_wal_2 pIp_mGyroData_wal_3 pIp_mGyroData_wal_4 pIp_mGyroData_wal_5 pIp_mGyroData_wal_6 pIp_mGyroData_wal_7 pIp_mGyroData_wal_8 pIp_mGyroData_JoinTotal pIp_mGyroData_gyroStatus0 pIp_mGyroData_gyroStatus1 pIp_mGyroData_W_l pIp_mGyroData_W_0 pIp_mGyroData_W_1 pIp_mGyroData_W_2 pIp_mGyroData_SignFlag_l pIp_mGyroData_SignFlag_0 pIp_mGyroData_SignFlag_1 pIp_mGyroData_SignFlag_2 pIp_mGyroData_SignFlag_3 pIp_mGyroData_SignFlag_4 pIp_mGyroData_SignFlag_5 pIp_mGyroData_SignFlag_6 pIp_mGyroData_SignFlag_7 pIp_mGyroData_SignFlag_8 pIp_mGyroData_Rtemp_l pIp_mGyroData_Rtemp_0 pIp_mGyroData_Rtemp_1 pIp_mGyroData_Rtemp_2 pIp_mGyroData_stateFlag_l pIp_mGyroData_stateFlag_0 pIp_mGyroData_stateFlag_1 pIp_mGyroData_stateFlag_2 pIp_mGyroData_stateFlag_3 pIp_mGyroData_stateFlag_4 pIp_mGyroData_stateFlag_5 pIp_mGyroData_stateFlag_6 pIp_mGyroData_stateFlag_7 pIp_mGyroData_stateFlag_8 pIp_mModulator_u pIp_mModulator_r pIp_mModulator_Yp pIp_mModulator_Yn pIp_mThrDistribute_flgABChoose pIp_mThrDistribute_wPulse pIp_mThrDistribute_stateFlag_l pIp_mThrDistribute_stateFlag_0 pIp_mThrDistribute_stateFlag_1 pIp_mFWarning_CWsp pIp_mFWarning_CWtf pIp_mFWarning_Wsp pIp_mFWarning_Wtf pIp_mFWarning_Wav pIp_mFWarning_flgups pIp_mFWarning_flgModeChange pIp_mFWarning_countAV pIp_mFWarning_countSPLost pIp_mFWarning_countSPSeen pIp_mFWarning_countSPset pIp_mFWarning_countUPSpc
Require pIp->countInt32ms == pIp_countInt32ms && pIp->countSate == pIp_countSate && pIp->countPublic == pIp_countPublic && pIp->countMode == pIp_countMode && pIp->flgPRSAM == pIp_flgPRSAM && pIp->flgGryoCalc == pIp_flgGryoCalc && pIp->flg160INT == pIp_flg160INT && store_int_array(pIp->mGyroData.countPick,9, pIp_mGyroData_countPick_l) && pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && store_int_array(pIp->mGyroData.Gi,3, pIp_mGyroData_Gi_l) && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && store_int_array(pIp->mGyroData.wa,9, pIp_mGyroData_wa_l) && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && store_int_array(pIp->mGyroData.wal,9, pIp_mGyroData_wal_l) && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal && pIp->mGyroData.gyroStatus0 == pIp_mGyroData_gyroStatus0 && pIp->mGyroData.gyroStatus1 == pIp_mGyroData_gyroStatus1 && store_int_array(pIp->mGyroData.W,3, pIp_mGyroData_W_l) && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && store_int_array(pIp->mGyroData.SignFlag,9, pIp_mGyroData_SignFlag_l) && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && store_int_array(pIp->mGyroData.Rtemp,3, pIp_mGyroData_Rtemp_l) && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && store_int_array(pIp->mGyroData.stateFlag,9, pIp_mGyroData_stateFlag_l) && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && pIp->mModulator.u == pIp_mModulator_u && pIp->mModulator.r == pIp_mModulator_r && pIp->mModulator.Yp == pIp_mModulator_Yp && pIp->mModulator.Yn == pIp_mModulator_Yn && pIp->mThrDistribute.flgABChoose == pIp_mThrDistribute_flgABChoose && pIp->mThrDistribute.wPulse == pIp_mThrDistribute_wPulse && store_int_array(pIp->mThrDistribute.stateFlag,2, pIp_mThrDistribute_stateFlag_l) && pIp_mThrDistribute_stateFlag_l[0] == pIp_mThrDistribute_stateFlag_0 && pIp_mThrDistribute_stateFlag_l[1] == pIp_mThrDistribute_stateFlag_1 && pIp->mFWarning.CWsp == pIp_mFWarning_CWsp && pIp->mFWarning.CWtf == pIp_mFWarning_CWtf && pIp->mFWarning.Wsp == pIp_mFWarning_Wsp && pIp->mFWarning.Wtf == pIp_mFWarning_Wtf && pIp->mFWarning.Wav == pIp_mFWarning_Wav && pIp->mFWarning.flgups == pIp_mFWarning_flgups && pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange && pIp->mFWarning.countAV == pIp_mFWarning_countAV && pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost && pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen && pIp->mFWarning.countSPset == pIp_mFWarning_countSPset && pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc
Ensure (pIp_mGyroData_countPick_l[0] == pIp_mGyroData_countPick_0 && pIp_mGyroData_countPick_l[1] == pIp_mGyroData_countPick_1 && pIp_mGyroData_countPick_l[2] == pIp_mGyroData_countPick_2 && pIp_mGyroData_countPick_l[3] == pIp_mGyroData_countPick_3 && pIp_mGyroData_countPick_l[4] == pIp_mGyroData_countPick_4 && pIp_mGyroData_countPick_l[5] == pIp_mGyroData_countPick_5 && pIp_mGyroData_countPick_l[6] == pIp_mGyroData_countPick_6 && pIp_mGyroData_countPick_l[7] == pIp_mGyroData_countPick_7 && pIp_mGyroData_countPick_l[8] == pIp_mGyroData_countPick_8 && pIp_mGyroData_Gi_l[0] == pIp_mGyroData_Gi_0 && pIp_mGyroData_Gi_l[1] == pIp_mGyroData_Gi_1 && pIp_mGyroData_Gi_l[2] == pIp_mGyroData_Gi_2 && pIp_mGyroData_wa_l[0] == pIp_mGyroData_wa_0 && pIp_mGyroData_wa_l[1] == pIp_mGyroData_wa_1 && pIp_mGyroData_wa_l[2] == pIp_mGyroData_wa_2 && pIp_mGyroData_wa_l[3] == pIp_mGyroData_wa_3 && pIp_mGyroData_wa_l[4] == pIp_mGyroData_wa_4 && pIp_mGyroData_wa_l[5] == pIp_mGyroData_wa_5 && pIp_mGyroData_wa_l[6] == pIp_mGyroData_wa_6 && pIp_mGyroData_wa_l[7] == pIp_mGyroData_wa_7 && pIp_mGyroData_wa_l[8] == pIp_mGyroData_wa_8 && pIp_mGyroData_wal_l[0] == pIp_mGyroData_wal_0 && pIp_mGyroData_wal_l[1] == pIp_mGyroData_wal_1 && pIp_mGyroData_wal_l[2] == pIp_mGyroData_wal_2 && pIp_mGyroData_wal_l[3] == pIp_mGyroData_wal_3 && pIp_mGyroData_wal_l[4] == pIp_mGyroData_wal_4 && pIp_mGyroData_wal_l[5] == pIp_mGyroData_wal_5 && pIp_mGyroData_wal_l[6] == pIp_mGyroData_wal_6 && pIp_mGyroData_wal_l[7] == pIp_mGyroData_wal_7 && pIp_mGyroData_wal_l[8] == pIp_mGyroData_wal_8 && pIp_mGyroData_W_l[0] == pIp_mGyroData_W_0 && pIp_mGyroData_W_l[1] == pIp_mGyroData_W_1 && pIp_mGyroData_W_l[2] == pIp_mGyroData_W_2 && pIp_mGyroData_SignFlag_l[0] == pIp_mGyroData_SignFlag_0 && pIp_mGyroData_SignFlag_l[1] == pIp_mGyroData_SignFlag_1 && pIp_mGyroData_SignFlag_l[2] == pIp_mGyroData_SignFlag_2 && pIp_mGyroData_SignFlag_l[3] == pIp_mGyroData_SignFlag_3 && pIp_mGyroData_SignFlag_l[4] == pIp_mGyroData_SignFlag_4 && pIp_mGyroData_SignFlag_l[5] == pIp_mGyroData_SignFlag_5 && pIp_mGyroData_SignFlag_l[6] == pIp_mGyroData_SignFlag_6 && pIp_mGyroData_SignFlag_l[7] == pIp_mGyroData_SignFlag_7 && pIp_mGyroData_SignFlag_l[8] == pIp_mGyroData_SignFlag_8 && pIp_mGyroData_Rtemp_l[0] == pIp_mGyroData_Rtemp_0 && pIp_mGyroData_Rtemp_l[1] == pIp_mGyroData_Rtemp_1 && pIp_mGyroData_Rtemp_l[2] == pIp_mGyroData_Rtemp_2 && pIp_mGyroData_stateFlag_l[0] == pIp_mGyroData_stateFlag_0 && pIp_mGyroData_stateFlag_l[1] == pIp_mGyroData_stateFlag_1 && pIp_mGyroData_stateFlag_l[2] == pIp_mGyroData_stateFlag_2 && pIp_mGyroData_stateFlag_l[3] == pIp_mGyroData_stateFlag_3 && pIp_mGyroData_stateFlag_l[4] == pIp_mGyroData_stateFlag_4 && pIp_mGyroData_stateFlag_l[5] == pIp_mGyroData_stateFlag_5 && pIp_mGyroData_stateFlag_l[6] == pIp_mGyroData_stateFlag_6 && pIp_mGyroData_stateFlag_l[7] == pIp_mGyroData_stateFlag_7 && pIp_mGyroData_stateFlag_l[8] == pIp_mGyroData_stateFlag_8 && pIp_mThrDistribute_stateFlag_l[0] == pIp_mThrDistribute_stateFlag_0 && pIp_mThrDistribute_stateFlag_l[1] == pIp_mThrDistribute_stateFlag_1 && (pIp->countInt32ms == 0) * (pIp->countSate == 0) * (pIp->countPublic == 0) * (pIp->countMode == 0) * (pIp->flgPRSAM == 13107) * (pIp->flgGryoCalc == 0) * (pIp->flg160INT == 13107) * store_int_array(&pIp->mGyroData.countPick, 9, pIp_mGyroData_countPick_l) * store_int_array(&pIp->mGyroData.Gi, 3, pIp_mGyroData_Gi_l) * store_int_array(&pIp->mGyroData.wa, 9, pIp_mGyroData_wa_l) * store_int_array(&pIp->mGyroData.wal, 9, pIp_mGyroData_wal_l) * (pIp->mGyroData.JoinTotal == pIp_mGyroData_JoinTotal) * (pIp->mGyroData.gyroStatus0 == 0) * (pIp->mGyroData.gyroStatus1 == 0) * store_int_array(&pIp->mGyroData.W, 3, pIp_mGyroData_W_l) * store_int_array(&pIp->mGyroData.SignFlag, 9, pIp_mGyroData_SignFlag_l) * store_int_array(&pIp->mGyroData.Rtemp, 3, pIp_mGyroData_Rtemp_l) * store_int_array(&pIp->mGyroData.stateFlag, 9, pIp_mGyroData_stateFlag_l) * (pIp->mModulator.u == pIp_mModulator_u) * (pIp->mModulator.r == 0) * (pIp->mModulator.Yp == pIp_mModulator_Yp) * (pIp->mModulator.Yn == pIp_mModulator_Yn) * (pIp->mThrDistribute.flgABChoose == pIp_mThrDistribute_flgABChoose) * (pIp->mThrDistribute.wPulse == 0) * store_int_array(&pIp->mThrDistribute.stateFlag, 2, pIp_mThrDistribute_stateFlag_l) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV) * (pIp->mFWarning.countSPLost == 0) * (pIp->mFWarning.countSPSeen == 0) * (pIp->mFWarning.countSPset == 0) * (pIp->mFWarning.countUPSpc == 0))
*/
2025-07-05 02:22:30,904 - INFO  - 
函数 InitVarFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->mGyroData.countPick+ (0..9)) && \valid(pIp->mGyroData.Gi+ (0..3)) && \valid(pIp->mGyroData.wa+ (0..9)) && \valid(pIp->mGyroData.wal+ (0..9)) && \valid(pIp->mGyroData.W+ (0..3)) && \valid(pIp->mGyroData.SignFlag+ (0..9)) && \valid(pIp->mGyroData.Rtemp+ (0..3)) && \valid(pIp->mGyroData.stateFlag+ (0..9)) && \valid(pIp->mThrDistribute.stateFlag+ (0..2)) ;
 requires \separated(pIp,pIp->mGyroData.countPick+(0..9),pIp->mGyroData.Gi+(0..3),pIp->mGyroData.wa+(0..9),pIp->mGyroData.wal+(0..9),pIp->mGyroData.W+(0..3),pIp->mGyroData.SignFlag+(0..9),pIp->mGyroData.Rtemp+(0..3),pIp->mGyroData.stateFlag+(0..9),pIp->mThrDistribute.stateFlag+(0..2)) ;

ensures pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) && pIp->mThrDistribute.stateFlag[0] == \old(pIp->mThrDistribute.stateFlag[0]) && pIp->mThrDistribute.stateFlag[1] == \old(pIp->mThrDistribute.stateFlag[1]) ==> pIp->countInt32ms == 0&&pIp->countSate == 0&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgPRSAM == 13107&&pIp->flgGryoCalc == 0&&pIp->flg160INT == 13107&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == 0&&pIp->mGyroData.gyroStatus1 == 0&&pIp->mModulator.u == \old(pIp->mModulator.u)&&pIp->mModulator.r == 0&&pIp->mModulator.Yp == \old(pIp->mModulator.Yp)&&pIp->mModulator.Yn == \old(pIp->mModulator.Yn)&&pIp->mThrDistribute.flgABChoose == \old(pIp->mThrDistribute.flgABChoose)&&pIp->mThrDistribute.wPulse == 0&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == 0&&pIp->mFWarning.countSPSeen == 0&&pIp->mFWarning.countSPset == 0&&pIp->mFWarning.countUPSpc == 0;

*/

2025-07-05 02:22:31,083 - INFO  - 
VERIFICATION FOR InitVarFun
2025-07-05 02:22:31,084 - INFO  - ========================================

2025-07-05 02:22:32,066 - INFO  - 
GENERLIZATION FOR InitVarFun
2025-07-05 02:22:32,066 - INFO  - ========================================

2025-07-05 02:22:40,230 - INFO  - Original ACSL: pIp->mGyroData.countPick[0] == \old(pIp->mGyroData.countPick[0]) && pIp->mGyroData.countPick[1] == \old(pIp->mGyroData.countPick[1]) && pIp->mGyroData.countPick[2] == \old(pIp->mGyroData.countPick[2]) && pIp->mGyroData.countPick[3] == \old(pIp->mGyroData.countPick[3]) && pIp->mGyroData.countPick[4] == \old(pIp->mGyroData.countPick[4]) && pIp->mGyroData.countPick[5] == \old(pIp->mGyroData.countPick[5]) && pIp->mGyroData.countPick[6] == \old(pIp->mGyroData.countPick[6]) && pIp->mGyroData.countPick[7] == \old(pIp->mGyroData.countPick[7]) && pIp->mGyroData.countPick[8] == \old(pIp->mGyroData.countPick[8]) && pIp->mGyroData.Gi[0] == \old(pIp->mGyroData.Gi[0]) && pIp->mGyroData.Gi[1] == \old(pIp->mGyroData.Gi[1]) && pIp->mGyroData.Gi[2] == \old(pIp->mGyroData.Gi[2]) && pIp->mGyroData.wa[0] == \old(pIp->mGyroData.wa[0]) && pIp->mGyroData.wa[1] == \old(pIp->mGyroData.wa[1]) && pIp->mGyroData.wa[2] == \old(pIp->mGyroData.wa[2]) && pIp->mGyroData.wa[3] == \old(pIp->mGyroData.wa[3]) && pIp->mGyroData.wa[4] == \old(pIp->mGyroData.wa[4]) && pIp->mGyroData.wa[5] == \old(pIp->mGyroData.wa[5]) && pIp->mGyroData.wa[6] == \old(pIp->mGyroData.wa[6]) && pIp->mGyroData.wa[7] == \old(pIp->mGyroData.wa[7]) && pIp->mGyroData.wa[8] == \old(pIp->mGyroData.wa[8]) && pIp->mGyroData.wal[0] == \old(pIp->mGyroData.wal[0]) && pIp->mGyroData.wal[1] == \old(pIp->mGyroData.wal[1]) && pIp->mGyroData.wal[2] == \old(pIp->mGyroData.wal[2]) && pIp->mGyroData.wal[3] == \old(pIp->mGyroData.wal[3]) && pIp->mGyroData.wal[4] == \old(pIp->mGyroData.wal[4]) && pIp->mGyroData.wal[5] == \old(pIp->mGyroData.wal[5]) && pIp->mGyroData.wal[6] == \old(pIp->mGyroData.wal[6]) && pIp->mGyroData.wal[7] == \old(pIp->mGyroData.wal[7]) && pIp->mGyroData.wal[8] == \old(pIp->mGyroData.wal[8]) && pIp->mGyroData.W[0] == \old(pIp->mGyroData.W[0]) && pIp->mGyroData.W[1] == \old(pIp->mGyroData.W[1]) && pIp->mGyroData.W[2] == \old(pIp->mGyroData.W[2]) && pIp->mGyroData.SignFlag[0] == \old(pIp->mGyroData.SignFlag[0]) && pIp->mGyroData.SignFlag[1] == \old(pIp->mGyroData.SignFlag[1]) && pIp->mGyroData.SignFlag[2] == \old(pIp->mGyroData.SignFlag[2]) && pIp->mGyroData.SignFlag[3] == \old(pIp->mGyroData.SignFlag[3]) && pIp->mGyroData.SignFlag[4] == \old(pIp->mGyroData.SignFlag[4]) && pIp->mGyroData.SignFlag[5] == \old(pIp->mGyroData.SignFlag[5]) && pIp->mGyroData.SignFlag[6] == \old(pIp->mGyroData.SignFlag[6]) && pIp->mGyroData.SignFlag[7] == \old(pIp->mGyroData.SignFlag[7]) && pIp->mGyroData.SignFlag[8] == \old(pIp->mGyroData.SignFlag[8]) && pIp->mGyroData.Rtemp[0] == \old(pIp->mGyroData.Rtemp[0]) && pIp->mGyroData.Rtemp[1] == \old(pIp->mGyroData.Rtemp[1]) && pIp->mGyroData.Rtemp[2] == \old(pIp->mGyroData.Rtemp[2]) && pIp->mGyroData.stateFlag[0] == \old(pIp->mGyroData.stateFlag[0]) && pIp->mGyroData.stateFlag[1] == \old(pIp->mGyroData.stateFlag[1]) && pIp->mGyroData.stateFlag[2] == \old(pIp->mGyroData.stateFlag[2]) && pIp->mGyroData.stateFlag[3] == \old(pIp->mGyroData.stateFlag[3]) && pIp->mGyroData.stateFlag[4] == \old(pIp->mGyroData.stateFlag[4]) && pIp->mGyroData.stateFlag[5] == \old(pIp->mGyroData.stateFlag[5]) && pIp->mGyroData.stateFlag[6] == \old(pIp->mGyroData.stateFlag[6]) && pIp->mGyroData.stateFlag[7] == \old(pIp->mGyroData.stateFlag[7]) && pIp->mGyroData.stateFlag[8] == \old(pIp->mGyroData.stateFlag[8]) && pIp->mThrDistribute.stateFlag[0] == \old(pIp->mThrDistribute.stateFlag[0]) && pIp->mThrDistribute.stateFlag[1] == \old(pIp->mThrDistribute.stateFlag[1]) ==> pIp->countInt32ms == 0&&pIp->countSate == 0&&pIp->countPublic == 0&&pIp->countMode == 0&&pIp->flgPRSAM == 13107&&pIp->flgGryoCalc == 0&&pIp->flg160INT == 13107&&pIp->mGyroData.JoinTotal == \old(pIp->mGyroData.JoinTotal)&&pIp->mGyroData.gyroStatus0 == 0&&pIp->mGyroData.gyroStatus1 == 0&&pIp->mModulator.u == \old(pIp->mModulator.u)&&pIp->mModulator.r == 0&&pIp->mModulator.Yp == \old(pIp->mModulator.Yp)&&pIp->mModulator.Yn == \old(pIp->mModulator.Yn)&&pIp->mThrDistribute.flgABChoose == \old(pIp->mThrDistribute.flgABChoose)&&pIp->mThrDistribute.wPulse == 0&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == 0&&pIp->mFWarning.countSPSeen == 0&&pIp->mFWarning.countSPset == 0&&pIp->mFWarning.countUPSpc == 0;
2025-07-05 02:22:40,252 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(...,
                                        ...),
                                        ... == ...),
                                        pIp_mGyroData_SignFlag_5 ==
                                        old_pIp_mGyroData_SignFlag_5),
                                        pIp_mGyroData_SignFlag_6 ==
                                        old_pIp_mGyroData_SignFlag_6),
                                        pIp_mGyroData_SignFlag_7 ==
                                        old_pIp_mGyroData_SignFlag_7),
                                        pIp_mGyroData_SignFlag_8 ==
                                        old_pIp_mGyroData_SignFlag_8),
                                        pIp_mGyroData_Rtemp_0 ==
                                        old_pIp_mGyroData_Rtemp_0),
                                        pIp_mGyroData_Rtemp_1 ==
                                        old_pIp_mGyroData_Rtemp_1),
                                        pIp_mGyroData_Rtemp_2 ==
                                        old_pIp_mGyroData_Rtemp_2),
                                        pIp_mGyroData_stateFlag_0 ==
                                        old_pIp_mGyroData_stateFlag_0),
                                        pIp_mGyroData_stateFlag_1 ==
                                        old_pIp_mGyroData_stateFlag_1),
                                        pIp_mGyroData_stateFlag_2 ==
                                        old_pIp_mGyroData_stateFlag_2),
                                        pIp_mGyroData_stateFlag_3 ==
                                        old_pIp_mGyroData_stateFlag_3),
                                    pIp_mGyroData_stateFlag_4 ==
                                    old_pIp_mGyroData_stateFlag_4),
                                pIp_mGyroData_stateFlag_5 ==
                                old_pIp_mGyroData_stateFlag_5),
                            pIp_mGyroData_stateFlag_6 ==
                            old_pIp_mGyroData_stateFlag_6),
                        pIp_mGyroData_stateFlag_7 ==
                        old_pIp_mGyroData_stateFlag_7),
                    pIp_mGyroData_stateFlag_8 ==
                    old_pIp_mGyroData_stateFlag_8),
                pIp_mThrDistribute_stateFlag_0 ==
                old_pIp_mThrDistribute_stateFlag_0),
            pIp_mThrDistribute_stateFlag_1 ==
            old_pIp_mThrDistribute_stateFlag_1),
        And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(...,
                                        ...),
                                        ... == ...),
                                        pIp_mModulator_u ==
                                        old_pIp_mModulator_u),
                                        0 ==
                                        pIp_mModulator_r),
                                        pIp_mModulator_Yp ==
                                        old_pIp_mModulator_Yp),
                                        pIp_mModulator_Yn ==
                                        old_pIp_mModulator_Yn),
                                        pIp_mThrDistribute_flgABChoose ==
                                        old_pIp_mThrDistribute_flgABChoose),
                                        0 ==
                                        pIp_mThrDistribute_wPulse),
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV),
                        0 == pIp_mFWarning_countSPLost),
                    0 == pIp_mFWarning_countSPSeen),
                0 == pIp_mFWarning_countSPset),
            0 == pIp_mFWarning_countUPSpc))
2025-07-05 02:23:07,052 - INFO  - 
InitVarFun 的最大非冗余集合:
2025-07-05 02:23:07,052 - INFO  - []
