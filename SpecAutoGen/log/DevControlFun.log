2025-07-05 02:33:13,802 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:33:13,802 - INFO  - ========================================

2025-07-05 02:33:13,885 - INFO  - 初始待处理函数: ['DevControlFun']
2025-07-05 02:33:13,885 - INFO  - 
GENERATE ANNOTATION FOR DevControlFun
2025-07-05 02:33:13,885 - INFO  - ========================================

2025-07-05 02:33:13,885 - INFO  - 函数 DevControlFun 已经初始化
2025-07-05 02:33:13,886 - INFO  - 开始生成 DevControlFun 的注释代码
2025-07-05 02:33:13,887 - INFO  - 
GENERATE FUNCTION SUMMARY FOR DevControlFun
2025-07-05 02:33:13,887 - INFO  - ========================================

2025-07-05 02:33:13,895 - INFO  - 开始生成完整的 DevControlFun 的注释代码
2025-07-05 02:33:13,904 - INFO  - 开始生成 DevControlFun 的 ACSL 规约
2025-07-05 02:33:13,912 - INFO  - 
SUMMARY FOR DevControlFun
2025-07-05 02:33:13,912 - INFO  - ========================================

2025-07-05 02:33:13,912 - INFO  - 
函数 DevControlFun 的 VST Summary 为:
/*@
With pIp_p1_v pIp_p1 pIp_p2_v pIp_p2 pIp_p3_v pIp_p3
Require *(pIp->p1) == pIp_p1_v && (pIp->p1) == pIp_p1 && *(pIp->p2) == pIp_p2_v && (pIp->p2) == pIp_p2 && *(pIp->p3) == pIp_p3_v && (pIp->p3) == pIp_p3
Ensure ((pIp->p1 == pIp_p1) * (*pIp->p1 == 60306) * (pIp->p2 == pIp_p2) * (*pIp->p2 == 1) * (pIp->p3 == pIp_p3) * (*pIp->p3 == 252))
*/
2025-07-05 02:33:13,912 - INFO  - 
函数 DevControlFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->p1) && \valid(pIp->p2) && \valid(pIp->p3) ;
 requires \separated(pIp,pIp->p1,pIp->p2,pIp->p3) ;

ensures pIp->p1 == \old(pIp->p1)&&*pIp->p1 == 60306&&pIp->p2 == \old(pIp->p2)&&*pIp->p2 == 1&&pIp->p3 == \old(pIp->p3)&&*pIp->p3 == 252;

*/

2025-07-05 02:33:14,119 - INFO  - 
VERIFICATION FOR DevControlFun
2025-07-05 02:33:14,119 - INFO  - ========================================

2025-07-05 02:33:16,131 - INFO  - 
GENERLIZATION FOR DevControlFun
2025-07-05 02:33:16,131 - INFO  - ========================================

2025-07-05 02:33:16,204 - INFO  - Original ACSL: pIp->p1 == \old(pIp->p1)&&*pIp->p1 == 60306&&pIp->p2 == \old(pIp->p2)&&*pIp->p2 == 1&&pIp->p3 == \old(pIp->p3)&&*pIp->p3 == 252;
2025-07-05 02:33:16,206 - INFO  - Z3 Expression: And(And(And(And(And(pIp_p1 == old_pIp_p1, 60306 == pIp_p1_v),
                pIp_p2 == old_pIp_p2),
            1 == pIp_p2_v),
        pIp_p3 == old_pIp_p3),
    252 == pIp_p3_v)
2025-07-05 02:33:16,457 - INFO  - 
DevControlFun 的最大非冗余集合:
2025-07-05 02:33:16,457 - INFO  - [pIp_p2 == old_pIp_p2, pIp_p1 == old_pIp_p1, pIp_p3 == old_pIp_p3, pIp_p3_v >= 0, pIp_p1_v >= 0, pIp_p2_v == 1]
