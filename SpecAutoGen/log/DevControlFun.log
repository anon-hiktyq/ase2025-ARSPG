FUNCTION INITIALIZATION
========================================

type_name:__DevControl
初始待处理函数: ['DevControlFun']

GENERATE ANNOTATION FOR DevControlFun
========================================

函数 DevControlFun 已经初始化
开始生成 DevControlFun 的注释代码
ACSL DevControlFun.c文件的内容为: 


typedef struct __DevControl
{
  int * p1;
  int * p2;
  int * p3;

} DevControl;

void DevControlFun(DevControl *pIp)
{
	*(pIp->p1)= 0xEB92;

	*(pIp->p2)= 0x01;

	*(pIp->p3)= 0xFC;

	return ;
}
文件 3_output/test_ip/DevControlFun.c 已成功创建并写入。
预注释DevControlFun.c文件的内容为: 

#include "../verification_stdlib.h"
#include "../verification_list.h"
#include "../int_array_def.h"

/*@ Extern Coq (Result: Assertion) */
/*@ Extern Coq (Results: Z -> Assertion) */

    typedef struct __DevControl
{
  int * p1;
  int * p2;
  int * p3;

} DevControl;

void DevControlFun(DevControl *pIp)

/*@
With pIp_p1_v pIp_p1 pIp_p2_v pIp_p2 pIp_p3_v pIp_p3
Require *(pIp->p1) == pIp_p1_v && (pIp->p1) == pIp_p1 && *(pIp->p2) == pIp_p2_v && (pIp->p2) == pIp_p2 && *(pIp->p3) == pIp_p3_v && (pIp->p3) == pIp_p3
Ensure emp
*/{
	*(pIp->p1)= 0xEB92;

	*(pIp->p2)= 0x01;

	*(pIp->p3)= 0xFC;

	return ;
}
文件 1_output/test_ip/DevControlFun.c 已成功创建并写入。
文件 2_output/test_ip/DevControlFun.c 已成功创建并写入。

GENERATE FUNCTION SUMMARY FOR DevControlFun
========================================

----------------------------------------
路径约束与返回值
Combined path condition:
((pIp->p1 == pIp_p1) * (*pIp_p1 == 60306) * (pIp->p2 == pIp_p2) * (*pIp_p2 == 1) * (pIp->p3 == pIp_p3) * (*pIp_p3 == 252))
----------------------------------------

开始生成完整的 DevControlFun 的注释代码
完整注释DevControlFun.c 文件的内容为: 

#include "../verification_stdlib.h"
#include "../verification_list.h"
#include "../int_array_def.h"

/*@ Extern Coq (Result: Assertion) */
/*@ Extern Coq (Results: Z -> Assertion) */

    typedef struct __DevControl
{
  int * p1;
  int * p2;
  int * p3;

} DevControl;

void DevControlFun(DevControl *pIp)

/*@
With pIp_p1_v pIp_p1 pIp_p2_v pIp_p2 pIp_p3_v pIp_p3
Require *(pIp->p1) == pIp_p1_v && (pIp->p1) == pIp_p1 && *(pIp->p2) == pIp_p2_v && (pIp->p2) == pIp_p2 && *(pIp->p3) == pIp_p3_v && (pIp->p3) == pIp_p3
Ensure ((pIp->p1 == pIp_p1) * (*pIp_p1 == 60306) * (pIp->p2 == pIp_p2) * (*pIp_p2 == 1) * (pIp->p3 == pIp_p3) * (*pIp_p3 == 252))
*/
{
	*(pIp->p1)= 0xEB92;

	*(pIp->p2)= 0x01;

	*(pIp->p3)= 0xFC;

	return ;
}
文件 2_output/test_ip/DevControlFun.c 已成功创建并写入。
开始生成 DevControlFun 的 ACSL 规约
Variable Map: {'pIp->p1': 'pIp_p1', '*pIp_p1': '60306', 'pIp->p2': 'pIp_p2', '*pIp_p2': '1', 'pIp->p3': 'pIp_p3', '*pIp_p3': '252'}
Path Condition: None
Result: None
DevControlFun.c 的规约的内容为: 
typedef struct __DevControl
{
  int * p1;
  int * p2;
  int * p3;

} DevControl;

/*@
 requires \valid(pIp) && \valid(pIp->p1) && \valid(pIp->p2) && \valid(pIp->p3) ;
 requires \separated(pIp,pIp->p1,pIp->p2,pIp->p3) ;

ensures pIp->p1 == \old(pIp->p1)&&*\old(pIp->p1) == 60306&&pIp->p2 == \old(pIp->p2)&&*\old(pIp->p2) == 1&&pIp->p3 == \old(pIp->p3)&&*\old(pIp->p3) == 252;

*/

void DevControlFun(DevControl *pIp)

{
	*(pIp->p1)= 0xEB92;

	*(pIp->p2)= 0x01;

	*(pIp->p3)= 0xFC;

	return ;
}
文件 output/test_ip/DevControlFun.c 已成功创建并写入。

SUMMARY FOR DevControlFun
========================================


函数 DevControlFun 的 VST Summary 为:
/*@
With pIp_p1_v pIp_p1 pIp_p2_v pIp_p2 pIp_p3_v pIp_p3
Require *(pIp->p1) == pIp_p1_v && (pIp->p1) == pIp_p1 && *(pIp->p2) == pIp_p2_v && (pIp->p2) == pIp_p2 && *(pIp->p3) == pIp_p3_v && (pIp->p3) == pIp_p3
Ensure ((pIp->p1 == pIp_p1) * (*pIp_p1 == 60306) * (pIp->p2 == pIp_p2) * (*pIp_p2 == 1) * (pIp->p3 == pIp_p3) * (*pIp_p3 == 252))
*/

函数 DevControlFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->p1) && \valid(pIp->p2) && \valid(pIp->p3) ;
 requires \separated(pIp,pIp->p1,pIp->p2,pIp->p3) ;

ensures pIp->p1 == \old(pIp->p1)&&*\old(pIp->p1) == 60306&&pIp->p2 == \old(pIp->p2)&&*\old(pIp->p2) == 1&&pIp->p3 == \old(pIp->p3)&&*\old(pIp->p3) == 252;

*/


VERIFICATION FOR DevControlFun
========================================

syntax Correct
Loop Invariant:
[]

Assertion:
[]

Post Condition:
[True]

