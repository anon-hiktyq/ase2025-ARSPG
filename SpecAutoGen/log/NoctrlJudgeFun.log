2025-07-05 02:30:19,570 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:30:19,571 - INFO  - ========================================

2025-07-05 02:30:19,604 - INFO  - 初始待处理函数: ['NoctrlJudgeFun', 'TripleMax']
2025-07-05 02:30:19,604 - INFO  - 现在处理函数 TripleMax

2025-07-05 02:30:19,616 - INFO  - 
GENERATE ANNOTATION FOR TripleMax
2025-07-05 02:30:19,616 - INFO  - ========================================

2025-07-05 02:30:19,616 - INFO  - 函数 TripleMax 已经初始化
2025-07-05 02:30:19,617 - INFO  - 开始生成 TripleMax 的注释代码
2025-07-05 02:30:19,618 - INFO  - 
GENERATE FUNCTION SUMMARY FOR TripleMax
2025-07-05 02:30:19,618 - INFO  - ========================================

2025-07-05 02:30:19,667 - INFO  - 开始生成完整的 TripleMax 的注释代码
2025-07-05 02:30:19,677 - INFO  - 开始生成 TripleMax 的 ACSL 规约
2025-07-05 02:30:19,701 - INFO  - 
GENERATE ANNOTATION FOR NoctrlJudgeFun
2025-07-05 02:30:19,701 - INFO  - ========================================

2025-07-05 02:30:19,701 - INFO  - 函数 NoctrlJudgeFun 已经初始化
2025-07-05 02:30:19,701 - INFO  - 开始生成 NoctrlJudgeFun 的注释代码
2025-07-05 02:30:19,711 - INFO  - 
GENERATE FUNCTION SUMMARY FOR NoctrlJudgeFun
2025-07-05 02:30:19,711 - INFO  - ========================================

2025-07-05 02:30:20,086 - INFO  - 开始生成完整的 NoctrlJudgeFun 的注释代码
2025-07-05 02:30:20,103 - INFO  - 开始生成 NoctrlJudgeFun 的 ACSL 规约
2025-07-05 02:30:20,190 - INFO  - 
SUMMARY FOR NoctrlJudgeFun
2025-07-05 02:30:20,191 - INFO  - ========================================

2025-07-05 02:30:20,191 - INFO  - 
函数 NoctrlJudgeFun 的 VST Summary 为:
/*@
With pIp_mAttitude_angle_l pIp_mAttitude_angle_0 pIp_mAttitude_angle_1 pIp_mAttitude_angle_2 pIp_mAttitude_rate_l pIp_mAttitude_rate_0 pIp_mAttitude_rate_1 pIp_mAttitude_rate_2 pIp_nouse pIp_max pIp_mFWarning_CWsp pIp_mFWarning_CWtf pIp_mFWarning_Wsp pIp_mFWarning_Wtf pIp_mFWarning_Wav pIp_mFWarning_flgups pIp_mFWarning_flgModeChange pIp_mFWarning_countAV pIp_mFWarning_countSPLost pIp_mFWarning_countSPSeen pIp_mFWarning_countSPset pIp_mFWarning_countUPSpc
Require store_int_array(pIp->mAttitude.angle,3, pIp_mAttitude_angle_l) && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && store_int_array(pIp->mAttitude.rate,3, pIp_mAttitude_rate_l) && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && pIp->nouse == pIp_nouse && pIp->max == pIp_max && pIp->mFWarning.CWsp == pIp_mFWarning_CWsp && pIp->mFWarning.CWtf == pIp_mFWarning_CWtf && pIp->mFWarning.Wsp == pIp_mFWarning_Wsp && pIp->mFWarning.Wtf == pIp_mFWarning_Wtf && pIp->mFWarning.Wav == pIp_mFWarning_Wav && pIp->mFWarning.flgups == pIp_mFWarning_flgups && pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange && pIp->mFWarning.countAV == pIp_mFWarning_countAV && pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost && pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen && pIp->mFWarning.countSPset == pIp_mFWarning_countSPset && pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc
Ensure (pIp_mFWarning_countAV + 1 > 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == 1) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV + 1 > 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == 1) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV + 1 > 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == 1) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV + 1 > 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == 1) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV + 1 <= 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV + 1 <= 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV + 1 <= 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV + 1 <= 300 && pIp->max > 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV + 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV > 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV - 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV > 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV - 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV > 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV - 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV > 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV - 1) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV <= 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV <= 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] > pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[2] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV <= 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] > pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc)) || (pIp_mFWarning_countAV <= 0 && pIp->max <= 2 && pIp_mAttitude_angle_l[2] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] <= pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_l[0] && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_l[2] && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_l[0] && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_l[1] && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_l[2] && pIp->max == pIp_mAttitude_angle_l[1] && pIp_mAttitude_angle_l[0] == pIp_mAttitude_angle_0 && pIp_mAttitude_angle_l[1] == pIp_mAttitude_angle_1 && pIp_mAttitude_angle_l[2] == pIp_mAttitude_angle_2 && pIp_mAttitude_rate_l[0] == pIp_mAttitude_rate_0 && pIp_mAttitude_rate_l[1] == pIp_mAttitude_rate_1 && pIp_mAttitude_rate_l[2] == pIp_mAttitude_rate_2 && store_int_array(&pIp->mAttitude.angle, 3, pIp_mAttitude_angle_l) * store_int_array(&pIp->mAttitude.rate, 3, pIp_mAttitude_rate_l) * (pIp->nouse == pIp_nouse) * (pIp->mFWarning.CWsp == pIp_mFWarning_CWsp) * (pIp->mFWarning.CWtf == pIp_mFWarning_CWtf) * (pIp->mFWarning.Wsp == pIp_mFWarning_Wsp) * (pIp->mFWarning.Wtf == pIp_mFWarning_Wtf) * (pIp->mFWarning.Wav == pIp_mFWarning_Wav) * (pIp->mFWarning.flgups == pIp_mFWarning_flgups) * (pIp->mFWarning.flgModeChange == pIp_mFWarning_flgModeChange) * (pIp->mFWarning.countAV == pIp_mFWarning_countAV) * (pIp->mFWarning.countSPLost == pIp_mFWarning_countSPLost) * (pIp->mFWarning.countSPSeen == pIp_mFWarning_countSPSeen) * (pIp->mFWarning.countSPset == pIp_mFWarning_countSPset) * (pIp->mFWarning.countUPSpc == pIp_mFWarning_countUPSpc))
*/
2025-07-05 02:30:20,192 - INFO  - 
函数 NoctrlJudgeFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->mAttitude.angle+ (0..3)) && \valid(pIp->mAttitude.rate+ (0..3)) ;
 requires \separated(pIp,pIp->mAttitude.angle+(0..3),pIp->mAttitude.rate+(0..3)) ;

ensures \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

ensures \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);

*/

2025-07-05 02:30:20,394 - INFO  - 
VERIFICATION FOR NoctrlJudgeFun
2025-07-05 02:30:20,395 - INFO  - ========================================

2025-07-05 02:30:22,124 - INFO  - 
GENERLIZATION FOR NoctrlJudgeFun
2025-07-05 02:30:22,125 - INFO  - ========================================

2025-07-05 02:30:22,702 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,717 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 <
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_1),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        1 ==
                                        pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,722 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,737 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 <
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_0),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        1 ==
                                        pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,741 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,756 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 <
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        1 ==
                                        pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,760 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 > 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == 1&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,775 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 <
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        1 ==
                                        pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,780 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,795 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 >=
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,799 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,814 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 >=
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,819 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,833 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 >=
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_0),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,838 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) + 1 <= 300 && pIp->max > 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) + 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,853 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(300 >=
                                        old_pIp_mFWarning_countAV +
                                        1,
                                        2 < pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_1),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV + 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,857 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,872 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 <
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV - 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,876 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,891 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 <
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV - 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,895 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,910 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 <
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_0),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV - 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,914 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) > 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV) - 1&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,929 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 <
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_1),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV - 1),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,933 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,947 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 >=
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,952 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] > pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[2] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,966 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 >=
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 >
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_2),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,970 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] > pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc)
2025-07-05 02:30:22,984 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 >=
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_0 >
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_0),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:22,989 - INFO  - Original ACSL: \old(pIp->mFWarning.countAV) <= 0 && pIp->max <= 2 && pIp->mAttitude.angle[2] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] <= pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == pIp->mAttitude.angle[0] && pIp->mAttitude.angle[1] == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[2] == pIp->mAttitude.angle[2] && pIp->mAttitude.rate[0] == pIp->mAttitude.rate[0] && pIp->mAttitude.rate[1] == pIp->mAttitude.rate[1] && pIp->mAttitude.rate[2] == pIp->mAttitude.rate[2] && pIp->max == pIp->mAttitude.angle[1] && pIp->mAttitude.angle[0] == \old(pIp->mAttitude.angle[0]) && pIp->mAttitude.angle[1] == \old(pIp->mAttitude.angle[1]) && pIp->mAttitude.angle[2] == \old(pIp->mAttitude.angle[2]) && pIp->mAttitude.rate[0] == \old(pIp->mAttitude.rate[0]) && pIp->mAttitude.rate[1] == \old(pIp->mAttitude.rate[1]) && pIp->mAttitude.rate[2] == \old(pIp->mAttitude.rate[2]) ==> pIp->nouse == \old(pIp->nouse)&&pIp->mFWarning.CWsp == \old(pIp->mFWarning.CWsp)&&pIp->mFWarning.CWtf == \old(pIp->mFWarning.CWtf)&&pIp->mFWarning.Wsp == \old(pIp->mFWarning.Wsp)&&pIp->mFWarning.Wtf == \old(pIp->mFWarning.Wtf)&&pIp->mFWarning.Wav == \old(pIp->mFWarning.Wav)&&pIp->mFWarning.flgups == \old(pIp->mFWarning.flgups)&&pIp->mFWarning.flgModeChange == \old(pIp->mFWarning.flgModeChange)&&pIp->mFWarning.countAV == \old(pIp->mFWarning.countAV)&&pIp->mFWarning.countSPLost == \old(pIp->mFWarning.countSPLost)&&pIp->mFWarning.countSPSeen == \old(pIp->mFWarning.countSPSeen)&&pIp->mFWarning.countSPset == \old(pIp->mFWarning.countSPset)&&pIp->mFWarning.countUPSpc == \old(pIp->mFWarning.countUPSpc);
2025-07-05 02:30:23,003 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(0 >=
                                        old_pIp_mFWarning_countAV,
                                        2 >= pIp_max),
                                        pIp_mAttitude_angle_2 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 <=
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_0 ==
                                        pIp_mAttitude_angle_0),
                                        pIp_mAttitude_angle_1 ==
                                        pIp_mAttitude_angle_1),
                                        pIp_mAttitude_angle_2 ==
                                        pIp_mAttitude_angle_2),
                                        pIp_mAttitude_rate_0 ==
                                        pIp_mAttitude_rate_0),
                                        pIp_mAttitude_rate_1 ==
                                        pIp_mAttitude_rate_1),
                                        pIp_mAttitude_rate_2 ==
                                        pIp_mAttitude_rate_2),
                                    pIp_max ==
                                    pIp_mAttitude_angle_1),
                                pIp_mAttitude_angle_0 ==
                                old_pIp_mAttitude_angle_0),
                            pIp_mAttitude_angle_1 ==
                            old_pIp_mAttitude_angle_1),
                        pIp_mAttitude_angle_2 ==
                        old_pIp_mAttitude_angle_2),
                    pIp_mAttitude_rate_0 ==
                    old_pIp_mAttitude_rate_0),
                pIp_mAttitude_rate_1 ==
                old_pIp_mAttitude_rate_1),
            pIp_mAttitude_rate_2 == old_pIp_mAttitude_rate_2),
        And(And(And(And(And(And(And(And(And(And(And(And(pIp_nouse ==
                                        old_pIp_nouse,
                                        pIp_mFWarning_CWsp ==
                                        old_pIp_mFWarning_CWsp),
                                        pIp_mFWarning_CWtf ==
                                        old_pIp_mFWarning_CWtf),
                                        pIp_mFWarning_Wsp ==
                                        old_pIp_mFWarning_Wsp),
                                        pIp_mFWarning_Wtf ==
                                        old_pIp_mFWarning_Wtf),
                                        pIp_mFWarning_Wav ==
                                        old_pIp_mFWarning_Wav),
                                    pIp_mFWarning_flgups ==
                                    old_pIp_mFWarning_flgups),
                                pIp_mFWarning_flgModeChange ==
                                old_pIp_mFWarning_flgModeChange),
                            pIp_mFWarning_countAV ==
                            old_pIp_mFWarning_countAV),
                        pIp_mFWarning_countSPLost ==
                        old_pIp_mFWarning_countSPLost),
                    pIp_mFWarning_countSPSeen ==
                    old_pIp_mFWarning_countSPSeen),
                pIp_mFWarning_countSPset ==
                old_pIp_mFWarning_countSPset),
            pIp_mFWarning_countUPSpc ==
            old_pIp_mFWarning_countUPSpc))
2025-07-05 02:30:32,586 - INFO  - 
NoctrlJudgeFun 的最大非冗余集合:
2025-07-05 02:30:32,587 - INFO  - []
