2025-07-05 02:30:49,532 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:30:49,532 - INFO  - ========================================

2025-07-05 02:30:49,575 - INFO  - 初始待处理函数: ['TripleAbsMaxFun']
2025-07-05 02:30:49,575 - INFO  - 
GENERATE ANNOTATION FOR TripleAbsMaxFun
2025-07-05 02:30:49,575 - INFO  - ========================================

2025-07-05 02:30:49,575 - INFO  - 函数 TripleAbsMaxFun 已经初始化
2025-07-05 02:30:49,576 - INFO  - 开始生成 TripleAbsMaxFun 的注释代码
2025-07-05 02:30:49,577 - INFO  - 
GENERATE FUNCTION SUMMARY FOR TripleAbsMaxFun
2025-07-05 02:30:49,578 - INFO  - ========================================

2025-07-05 02:30:49,856 - INFO  - 开始生成完整的 TripleAbsMaxFun 的注释代码
2025-07-05 02:30:49,865 - INFO  - 开始生成 TripleAbsMaxFun 的 ACSL 规约
2025-07-05 02:30:49,890 - INFO  - 
SUMMARY FOR TripleAbsMaxFun
2025-07-05 02:30:49,890 - INFO  - ========================================

2025-07-05 02:30:49,890 - INFO  - 
函数 TripleAbsMaxFun 的 VST Summary 为:
/*@
With pIp_abs_l pIp_abs_0 pIp_abs_1 pIp_abs_2 pIp_tmax pIp_ret_v pIp_ret
Require store_int_array(pIp->abs,3, pIp_abs_l) && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && pIp->tmax == pIp_tmax && *(pIp->ret) == pIp_ret_v && (pIp->ret) == pIp_ret
Ensure (-pIp_abs_l[2] <= pIp_abs_l[1] && pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[1])) || (-pIp_abs_l[2] <= pIp_abs_l[1] && -pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[1])) || (-pIp_abs_l[2] <= -pIp_abs_l[1] && -pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[1])) || (-pIp_abs_l[2] <= -pIp_abs_l[1] && pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[1])) || (pIp_abs_l[2] <= -pIp_abs_l[1] && pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[1])) || (pIp_abs_l[2] <= -pIp_abs_l[1] && -pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[1])) || (pIp_abs_l[2] <= pIp_abs_l[1] && -pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[1])) || (pIp_abs_l[2] <= pIp_abs_l[1] && pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[1]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[1])) || (-pIp_abs_l[2] <= pIp_abs_l[0] && pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[0])) || (-pIp_abs_l[2] <= -pIp_abs_l[0] && -pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[0])) || (-pIp_abs_l[2] <= -pIp_abs_l[0] && -pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[0])) || (-pIp_abs_l[2] <= pIp_abs_l[0] && pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[0])) || (pIp_abs_l[2] <= pIp_abs_l[0] && pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[0])) || (pIp_abs_l[2] <= -pIp_abs_l[0] && -pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[0])) || (pIp_abs_l[2] <= -pIp_abs_l[0] && -pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[0])) || (pIp_abs_l[2] <= pIp_abs_l[0] && pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[0]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[0])) || (pIp_abs_l[2] > pIp_abs_l[0] && pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (pIp_abs_l[2] > -pIp_abs_l[0] && -pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (pIp_abs_l[2] > -pIp_abs_l[0] && -pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (pIp_abs_l[2] > pIp_abs_l[0] && pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (-pIp_abs_l[2] > pIp_abs_l[0] && pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2])) || (-pIp_abs_l[2] > -pIp_abs_l[0] && -pIp_abs_l[0] > -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2])) || (-pIp_abs_l[2] > -pIp_abs_l[0] && -pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2])) || (-pIp_abs_l[2] > pIp_abs_l[0] && pIp_abs_l[0] > pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2])) || (pIp_abs_l[2] > pIp_abs_l[1] && pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (pIp_abs_l[2] > pIp_abs_l[1] && -pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (pIp_abs_l[2] > -pIp_abs_l[1] && -pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (pIp_abs_l[2] > -pIp_abs_l[1] && pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] >= 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == pIp_abs_l[2])) || (-pIp_abs_l[2] > -pIp_abs_l[1] && pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2])) || (-pIp_abs_l[2] > -pIp_abs_l[1] && -pIp_abs_l[0] <= -pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] < 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2])) || (-pIp_abs_l[2] > pIp_abs_l[1] && -pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] < 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2])) || (-pIp_abs_l[2] > pIp_abs_l[1] && pIp_abs_l[0] <= pIp_abs_l[1] && pIp_abs_l[2] < 0 && pIp_abs_l[1] >= 0 && pIp_abs_l[0] >= 0 && pIp_abs_l[0] == pIp_abs_0 && pIp_abs_l[1] == pIp_abs_1 && pIp_abs_l[2] == pIp_abs_2 && store_int_array(&pIp->abs, 3, pIp_abs_l) * (pIp->tmax == -pIp_abs_l[2]) * (pIp->ret == pIp_ret) * (*pIp_ret == -pIp_abs_l[2]))
*/
2025-07-05 02:30:49,891 - INFO  - 
函数 TripleAbsMaxFun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->abs+ (0..3)) && \valid(pIp->ret) ;
 requires \separated(pIp,pIp->abs+(0..3),pIp->ret) ;

ensures -pIp->abs[2] <= pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1];

ensures -pIp->abs[2] <= pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1];

ensures -pIp->abs[2] <= -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1];

ensures -pIp->abs[2] <= -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1];

ensures pIp->abs[2] <= -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1];

ensures pIp->abs[2] <= -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1];

ensures pIp->abs[2] <= pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1];

ensures pIp->abs[2] <= pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1];

ensures -pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0];

ensures -pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0];

ensures -pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0];

ensures -pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0];

ensures pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0];

ensures pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0];

ensures pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0];

ensures pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0];

ensures pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures -pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

ensures -pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

ensures -pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

ensures -pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

ensures pIp->abs[2] > pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures pIp->abs[2] > pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures pIp->abs[2] > -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures pIp->abs[2] > -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2];

ensures -pIp->abs[2] > -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

ensures -pIp->abs[2] > -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

ensures -pIp->abs[2] > pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

ensures -pIp->abs[2] > pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];

*/

2025-07-05 02:30:50,106 - INFO  - 
VERIFICATION FOR TripleAbsMaxFun
2025-07-05 02:30:50,106 - INFO  - ========================================

2025-07-05 02:30:51,877 - INFO  - 
GENERLIZATION FOR TripleAbsMaxFun
2025-07-05 02:30:51,878 - INFO  - ========================================

2025-07-05 02:30:51,953 - INFO  - Original ACSL: -pIp->abs[2] <= pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1]
2025-07-05 02:30:51,958 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    pIp_abs_1,
                                    pIp_abs_0 <= pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_1))
2025-07-05 02:30:51,960 - INFO  - Original ACSL: -pIp->abs[2] <= pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1]
2025-07-05 02:30:51,965 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_1))
2025-07-05 02:30:51,967 - INFO  - Original ACSL: -pIp->abs[2] <= -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1]
2025-07-05 02:30:51,973 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    0 - pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_1))
2025-07-05 02:30:51,976 - INFO  - Original ACSL: -pIp->abs[2] <= -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1]
2025-07-05 02:30:51,981 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    0 - pIp_abs_1,
                                    pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_1))
2025-07-05 02:30:51,983 - INFO  - Original ACSL: pIp->abs[2] <= -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1]
2025-07-05 02:30:51,989 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <=
                                    0 - pIp_abs_1,
                                    pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_1))
2025-07-05 02:30:51,991 - INFO  - Original ACSL: pIp->abs[2] <= -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[1]
2025-07-05 02:30:51,996 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <=
                                    0 - pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_1))
2025-07-05 02:30:51,998 - INFO  - Original ACSL: pIp->abs[2] <= pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1]
2025-07-05 02:30:52,003 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <= pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_1))
2025-07-05 02:30:52,004 - INFO  - Original ACSL: pIp->abs[2] <= pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[1]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[1]
2025-07-05 02:30:52,009 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <= pIp_abs_1,
                                    pIp_abs_0 <= pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_1,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_1))
2025-07-05 02:30:52,011 - INFO  - Original ACSL: -pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0]
2025-07-05 02:30:52,015 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    pIp_abs_0,
                                    pIp_abs_0 > pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_0))
2025-07-05 02:30:52,017 - INFO  - Original ACSL: -pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0]
2025-07-05 02:30:52,023 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_0))
2025-07-05 02:30:52,025 - INFO  - Original ACSL: -pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0]
2025-07-05 02:30:52,031 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_0))
2025-07-05 02:30:52,033 - INFO  - Original ACSL: -pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0]
2025-07-05 02:30:52,038 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 <=
                                    pIp_abs_0,
                                    pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_0))
2025-07-05 02:30:52,040 - INFO  - Original ACSL: pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0]
2025-07-05 02:30:52,044 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <= pIp_abs_0,
                                    pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_0))
2025-07-05 02:30:52,046 - INFO  - Original ACSL: pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0]
2025-07-05 02:30:52,052 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <=
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_0))
2025-07-05 02:30:52,054 - INFO  - Original ACSL: pIp->abs[2] <= -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[0]
2025-07-05 02:30:52,059 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <=
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_0))
2025-07-05 02:30:52,061 - INFO  - Original ACSL: pIp->abs[2] <= pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[0]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[0]
2025-07-05 02:30:52,065 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 <= pIp_abs_0,
                                    pIp_abs_0 > pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_0,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_0))
2025-07-05 02:30:52,067 - INFO  - Original ACSL: pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,072 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 > pIp_abs_0,
                                    pIp_abs_0 > pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,073 - INFO  - Original ACSL: pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,078 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 >
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,080 - INFO  - Original ACSL: pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,086 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 >
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,088 - INFO  - Original ACSL: pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,092 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 > pIp_abs_0,
                                    pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,094 - INFO  - Original ACSL: -pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2]
2025-07-05 02:30:52,100 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    pIp_abs_0,
                                    pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:52,102 - INFO  - Original ACSL: -pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2]
2025-07-05 02:30:52,107 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:52,109 - INFO  - Original ACSL: -pIp->abs[2] > -pIp->abs[0] && -pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2]
2025-07-05 02:30:52,115 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    0 - pIp_abs_0,
                                    0 - pIp_abs_0 >
                                    pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:52,117 - INFO  - Original ACSL: -pIp->abs[2] > pIp->abs[0] && pIp->abs[0] > pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2]
2025-07-05 02:30:52,122 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    pIp_abs_0,
                                    pIp_abs_0 > pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:52,124 - INFO  - Original ACSL: pIp->abs[2] > pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,128 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 > pIp_abs_1,
                                    pIp_abs_0 <= pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,130 - INFO  - Original ACSL: pIp->abs[2] > pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,135 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 > pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,137 - INFO  - Original ACSL: pIp->abs[2] > -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,142 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 >
                                    0 - pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,144 - INFO  - Original ACSL: pIp->abs[2] > -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] >= 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == pIp->abs[2]
2025-07-05 02:30:52,149 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(pIp_abs_2 >
                                    0 - pIp_abs_1,
                                    pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 <= pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == pIp_abs_2))
2025-07-05 02:30:52,151 - INFO  - Original ACSL: -pIp->abs[2] > -pIp->abs[1] && pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2]
2025-07-05 02:30:52,156 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    0 - pIp_abs_1,
                                    pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:52,158 - INFO  - Original ACSL: -pIp->abs[2] > -pIp->abs[1] && -pIp->abs[0] <= -pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] < 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2]
2025-07-05 02:30:52,164 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    0 - pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    0 - pIp_abs_1),
                                0 > pIp_abs_2),
                            0 > pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:52,166 - INFO  - Original ACSL: -pIp->abs[2] > pIp->abs[1] && -pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] < 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2]
2025-07-05 02:30:52,171 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    pIp_abs_1,
                                    0 - pIp_abs_0 <=
                                    pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 > pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:52,173 - INFO  - Original ACSL: -pIp->abs[2] > pIp->abs[1] && pIp->abs[0] <= pIp->abs[1] && pIp->abs[2] < 0 && pIp->abs[1] >= 0 && pIp->abs[0] >= 0 && pIp->abs[0] == \old(pIp->abs[0]) && pIp->abs[1] == \old(pIp->abs[1]) && pIp->abs[2] == \old(pIp->abs[2]) ==> pIp->tmax == -pIp->abs[2]&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == -pIp->abs[2];
2025-07-05 02:30:52,178 - INFO  - Z3 Expression: Implies(And(And(And(And(And(And(And(0 - pIp_abs_2 >
                                    pIp_abs_1,
                                    pIp_abs_0 <= pIp_abs_1),
                                0 > pIp_abs_2),
                            0 <= pIp_abs_1),
                        0 <= pIp_abs_0),
                    pIp_abs_0 == old_pIp_abs_0),
                pIp_abs_1 == old_pIp_abs_1),
            pIp_abs_2 == old_pIp_abs_2),
        And(And(pIp_tmax == 0 - pIp_abs_2,
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v == 0 - pIp_abs_2))
2025-07-05 02:30:55,453 - INFO  - 
TripleAbsMaxFun 的最大非冗余集合:
2025-07-05 02:30:55,453 - INFO  - []
