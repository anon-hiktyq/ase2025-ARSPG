2025-07-05 02:33:16,462 - INFO  - 
FUNCTION INITIALIZATION
2025-07-05 02:33:16,462 - INFO  - ========================================

2025-07-05 02:33:16,542 - INFO  - 初始待处理函数: ['Tr32Uint08Fun']
2025-07-05 02:33:16,542 - INFO  - 
GENERATE ANNOTATION FOR Tr32Uint08Fun
2025-07-05 02:33:16,542 - INFO  - ========================================

2025-07-05 02:33:16,542 - INFO  - 函数 Tr32Uint08Fun 已经初始化
2025-07-05 02:33:16,543 - INFO  - 开始生成 Tr32Uint08Fun 的注释代码
2025-07-05 02:33:16,544 - INFO  - 
GENERATE FUNCTION SUMMARY FOR Tr32Uint08Fun
2025-07-05 02:33:16,544 - INFO  - ========================================

2025-07-05 02:33:16,557 - INFO  - 开始生成完整的 Tr32Uint08Fun 的注释代码
2025-07-05 02:33:16,568 - INFO  - 开始生成 Tr32Uint08Fun 的 ACSL 规约
2025-07-05 02:33:16,580 - INFO  - 
SUMMARY FOR Tr32Uint08Fun
2025-07-05 02:33:16,580 - INFO  - ========================================

2025-07-05 02:33:16,581 - INFO  - 
函数 Tr32Uint08Fun 的 VST Summary 为:
/*@
With pIp_pC_v pIp_pC pIp_pB_v pIp_pB pIp_pA_v pIp_pA pIp_uiresult pIp_ret_v pIp_ret
Require *(pIp->pC) == pIp_pC_v && (pIp->pC) == pIp_pC && *(pIp->pB) == pIp_pB_v && (pIp->pB) == pIp_pB && *(pIp->pA) == pIp_pA_v && (pIp->pA) == pIp_pA && pIp->uiresult == pIp_uiresult && *(pIp->ret) == pIp_ret_v && (pIp->ret) == pIp_ret
Ensure (pIp_pA_v != pIp_pC_v && pIp_pA_v == pIp_pB_v && (pIp->pC == pIp_pC) * (*pIp_pC == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->pB == pIp_pB) * (*pIp_pB == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->pA == pIp_pA) * (*pIp_pA == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->uiresult == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->ret == pIp_ret) * (*pIp_ret == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v))) || (pIp_pA_v != pIp_pB_v && (pIp->pC == pIp_pC) * (*pIp_pC == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->pB == pIp_pB) * (*pIp_pB == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->pA == pIp_pA) * (*pIp_pA == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->uiresult == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v)) * (pIp->ret == pIp_ret) * (*pIp_ret == (pIp_pA_v & pIp_pB_v | pIp_pA_v & pIp_pC_v | pIp_pB_v & pIp_pC_v))) || (pIp_pA_v == pIp_pC_v && pIp_pA_v == pIp_pB_v && (pIp->pC == pIp_pC) * (*pIp->pC == pIp_pC_v) * (pIp->pB == pIp_pB) * (*pIp->pB == pIp_pB_v) * (pIp->pA == pIp_pA) * (*pIp->pA == pIp_pA_v) * (pIp->uiresult == pIp_pA_v) * (pIp->ret == pIp_ret) * (*pIp->ret == pIp_pA_v))
*/
2025-07-05 02:33:16,581 - INFO  - 
函数 Tr32Uint08Fun 的 ACSL Summary 为:
/*@
 requires \valid(pIp) && \valid(pIp->pC) && \valid(pIp->pB) && \valid(pIp->pA) && \valid(pIp->ret) ;
 requires \separated(pIp,pIp->pC,pIp->pB,pIp->pA,pIp->ret) ;

ensures \old(*pIp->pA) != \old(*pIp->pC) && \old(*pIp->pA) == \old(*pIp->pB) ==> pIp->pC == \old(pIp->pC)&&*\old(pIp->pC) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pB == \old(pIp->pB)&&*\old(pIp->pB) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pA == \old(pIp->pA)&&*\old(pIp->pA) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->uiresult == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC));

ensures \old(*pIp->pA) != \old(*pIp->pB) ==> pIp->pC == \old(pIp->pC)&&*\old(pIp->pC) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pB == \old(pIp->pB)&&*\old(pIp->pB) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pA == \old(pIp->pA)&&*\old(pIp->pA) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->uiresult == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC));

ensures \old(*pIp->pA) == \old(*pIp->pC) && \old(*pIp->pA) == \old(*pIp->pB) ==> pIp->pC == \old(pIp->pC)&&*pIp->pC == \old(*pIp->pC)&&pIp->pB == \old(pIp->pB)&&*pIp->pB == \old(*pIp->pB)&&pIp->pA == \old(pIp->pA)&&*pIp->pA == \old(*pIp->pA)&&pIp->uiresult == \old(*pIp->pA)&&pIp->ret == \old(pIp->ret)&&*pIp->ret == \old(*pIp->pA);

*/

2025-07-05 02:33:16,800 - INFO  - 
VERIFICATION FOR Tr32Uint08Fun
2025-07-05 02:33:16,800 - INFO  - ========================================

2025-07-05 02:33:19,280 - INFO  - 
GENERLIZATION FOR Tr32Uint08Fun
2025-07-05 02:33:19,280 - INFO  - ========================================

2025-07-05 02:33:19,412 - INFO  - Original ACSL: \old(*pIp->pA) != \old(*pIp->pC) && \old(*pIp->pA) == \old(*pIp->pB) ==> pIp->pC == \old(pIp->pC)&&*\old(pIp->pC) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pB == \old(pIp->pB)&&*\old(pIp->pB) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pA == \old(pIp->pA)&&*\old(pIp->pA) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->uiresult == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))
2025-07-05 02:33:19,426 - INFO  - Z3 Expression: Implies(And(pIp_pA_old_v != pIp_pC_old_v,
            pIp_pA_old_v == pIp_pB_old_v),
        And(And(And(And(And(And(And(And(pIp_pC == old_pIp_pC,
                                        old_pIp_pC_v ==
                                        pIp_pA_old_v &
                                        pIp_pB_old_v |
                                        pIp_pA_old_v &
                                        pIp_pC_old_v |
                                        pIp_pB_old_v &
                                        pIp_pC_old_v),
                                    pIp_pB == old_pIp_pB),
                                old_pIp_pB_v ==
                                pIp_pA_old_v & pIp_pB_old_v |
                                pIp_pA_old_v & pIp_pC_old_v |
                                pIp_pB_old_v & pIp_pC_old_v),
                            pIp_pA == old_pIp_pA),
                        old_pIp_pA_v ==
                        pIp_pA_old_v & pIp_pB_old_v |
                        pIp_pA_old_v & pIp_pC_old_v |
                        pIp_pB_old_v & pIp_pC_old_v),
                    pIp_uiresult ==
                    pIp_pA_old_v & pIp_pB_old_v |
                    pIp_pA_old_v & pIp_pC_old_v |
                    pIp_pB_old_v & pIp_pC_old_v),
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v ==
            pIp_pA_old_v & pIp_pB_old_v |
            pIp_pA_old_v & pIp_pC_old_v |
            pIp_pB_old_v & pIp_pC_old_v))
2025-07-05 02:33:19,429 - INFO  - Original ACSL: \old(*pIp->pA) != \old(*pIp->pB) ==> pIp->pC == \old(pIp->pC)&&*\old(pIp->pC) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pB == \old(pIp->pB)&&*\old(pIp->pB) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->pA == \old(pIp->pA)&&*\old(pIp->pA) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->uiresult == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))&&pIp->ret == \old(pIp->ret)&&*\old(pIp->ret) == (\old(*pIp->pA) & \old(*pIp->pB) | \old(*pIp->pA) & \old(*pIp->pC) | \old(*pIp->pB) & \old(*pIp->pC))
2025-07-05 02:33:19,442 - INFO  - Z3 Expression: Implies(pIp_pA_old_v != pIp_pB_old_v,
        And(And(And(And(And(And(And(And(pIp_pC == old_pIp_pC,
                                        old_pIp_pC_v ==
                                        pIp_pA_old_v &
                                        pIp_pB_old_v |
                                        pIp_pA_old_v &
                                        pIp_pC_old_v |
                                        pIp_pB_old_v &
                                        pIp_pC_old_v),
                                    pIp_pB == old_pIp_pB),
                                old_pIp_pB_v ==
                                pIp_pA_old_v & pIp_pB_old_v |
                                pIp_pA_old_v & pIp_pC_old_v |
                                pIp_pB_old_v & pIp_pC_old_v),
                            pIp_pA == old_pIp_pA),
                        old_pIp_pA_v ==
                        pIp_pA_old_v & pIp_pB_old_v |
                        pIp_pA_old_v & pIp_pC_old_v |
                        pIp_pB_old_v & pIp_pC_old_v),
                    pIp_uiresult ==
                    pIp_pA_old_v & pIp_pB_old_v |
                    pIp_pA_old_v & pIp_pC_old_v |
                    pIp_pB_old_v & pIp_pC_old_v),
                pIp_ret == old_pIp_ret),
            old_pIp_ret_v ==
            pIp_pA_old_v & pIp_pB_old_v |
            pIp_pA_old_v & pIp_pC_old_v |
            pIp_pB_old_v & pIp_pC_old_v))
2025-07-05 02:33:19,444 - INFO  - Original ACSL: \old(*pIp->pA) == \old(*pIp->pC) && \old(*pIp->pA) == \old(*pIp->pB) ==> pIp->pC == \old(pIp->pC)&&*pIp->pC == \old(*pIp->pC)&&pIp->pB == \old(pIp->pB)&&*pIp->pB == \old(*pIp->pB)&&pIp->pA == \old(pIp->pA)&&*pIp->pA == \old(*pIp->pA)&&pIp->uiresult == \old(*pIp->pA)&&pIp->ret == \old(pIp->ret)&&*pIp->ret == \old(*pIp->pA);
2025-07-05 02:33:19,448 - INFO  - Z3 Expression: Implies(And(pIp_pA_old_v == pIp_pC_old_v,
            pIp_pA_old_v == pIp_pB_old_v),
        And(And(And(And(And(And(And(And(pIp_pC == old_pIp_pC,
                                        pIp_pC_v ==
                                        pIp_pC_old_v),
                                    pIp_pB == old_pIp_pB),
                                pIp_pB_v == pIp_pB_old_v),
                            pIp_pA == old_pIp_pA),
                        pIp_pA_v == pIp_pA_old_v),
                    pIp_uiresult == pIp_pA_old_v),
                pIp_ret == old_pIp_ret),
            pIp_ret_v == pIp_pA_old_v))
2025-07-05 02:33:20,894 - INFO  - 
Tr32Uint08Fun 的最大非冗余集合:
2025-07-05 02:33:20,894 - INFO  - [pIp_pB == old_pIp_pB, pIp_pC == old_pIp_pC, pIp_ret == old_pIp_ret, pIp_pA == old_pIp_pA]
